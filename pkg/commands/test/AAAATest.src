//////////////////////////////////////////////////////////
// This program file is here to use for creating little //
// pieces of code for testing purposes.					//
//////////////////////////////////////////////////////////


use uo;
use cfgfile;
use file;
use os;
use polsys;
use basic;
use cliloc;

include "include/findCity";
include "include/client";
//include "include/utility";
//include "util/bank";
include ":currency:currency";
include "include/string";
//include ":gumps:gumpMessage";
//include ":staticHousing:staticHousing";
include "include/packets";
include ":clilocs:clilocs";
//include "include/attributes";
include "include/server";
include ":virtue:virtue";
include ":timedScripts:timedScripts";
include ":timedScripts:poisonUtil";
include ":gumps:requestGump";

program test_cmd(who, unused text)
	SendSysMessage(who, "Target a static item:", color := 88);
	var loc := TargetCoordinates(who);
	SendSysMessage(who, "Static ObjType is " + CStr(Hex(loc.objtype)));
	return;
	var trgt := Target(who);
	SendSysMessage(who, cstr(trgt.Tactics));
	trgt := Target(who);
	trgt.set_abilities := 3;
	SendSysMessage(who, cstr(trgt.Tactics));
	return;

	var junk := {};
	junk := {"fred", "wilma", "barney", "betty"};
	SetObjProperty(who, "junk", junk);
	return;

	var taxonomies := {};
	var Tax_NPC_list := {};
	var NPC_keys := {};
	var NPC_Ref := 0;
	var class := 0;
	var temp := 0;
	UnloadConfigFile(":npcs:settings");
	// Open the NPc taxonomy datafile or if it does not exist, create it.
	var NPC_Taxonomy_df := OpenDataFile( ":npcs:NPCsByTaxonomy" );
	if(NPC_Taxonomy_df.errortext == "Datafile does not exist")
		NPC_Taxonomy_df := CreateDataFile( ":npcs:NPCsByTaxonomy", DF_KEYTYPE_STRING );
	endif

	var npcdesc_cfg := ReadConfigFile(":*:npcdesc");
	if(npcdesc_cfg.errortext)
		Print(npcdesc_cfg.errortext);
	endif
	NPC_keys := GetConfigStringKeys(npcdesc_cfg);
	// Get the various Classifications from the settings.cfg file.
	// Loop through the NPCs defined in the npcdesc.cfg file
	// and add each unique classification to the taxonomies array.
	foreach key in NPC_keys
		temp := GetConfigString( FindConfigElem( npcdesc_cfg, key ), "Taxonomy" );
		if(temp in taxonomies)
			continue;
		endif
		// Any NPCs without a Taxonomy custom member will be excluded
		// from the datafile. Also if 'Taxonomy' is misspelled they are
		// also excluded.
		if(temp.errortext)
			continue;
		endif
		taxonomies.append(temp);
	endforeach

	foreach thing in taxonomies
		class := NPC_Taxonomy_df.CreateElement(thing);
		if(class.errortext)
			Print(thing + "   " + class.errortext);
		endif
		Tax_NPC_list := {};
		foreach NPC in NPC_keys
			NPC_Ref := FindConfigElem( npcdesc_cfg, NPC );
			if((NPC_Ref.Taxonomy == thing) && !(NPC in Tax_NPC_list))
				Tax_NPC_list.append(NPC);
			endif
		endforeach
		class.SetProp(thing, Tax_NPC_list);
	endforeach

endprogram


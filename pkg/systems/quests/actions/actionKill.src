use uo;
use os;


program actionKill(params)
    var who := params[1];
    var npcDeath := params[2];
    var action := params[3];
    var missionElem := params[4];

    var killActions := GetObjProperty(who, "QuestActionKill");
    var currentActions := GetObjProperty(who, "QuestCurrentActionKill");
    var index;


    for(index:=1; index<=killActions.Size(); index:=index+1)
        var countNpc := CInt(currentActions[index][2]);
        var countMax := CInt(killActions[index][2]);
        if((npcDeath == currentActions[index][1]) && (countNpc < countMax))
        SendSysMessage(who, "1111111", 3, 67);
            currentActions.erase(index);
            var newData := array{};
            newData[1] := npcDeath;
            newData[2] := countNpc + 1;
            if(newData[2])
                currentActions.insert(index, newData);
            else
                currentActions.erase(index);
            endif
            break;

        else
             SendSysMessage(who, "222222222222222", 3, 67);
        endif
    endfor

    if(EncodeBase64(currentActions) == EncodeBase64(killActions))
        SendSysMessage(who, "QuestMissionAward", 3, 67);
        EraseObjProperty(who, "QuestActionKill");
        EraseObjProperty(who, "QuestCurrentActionKill");
        return;
    endif

    var test:=EncodeBase64(currentActions);
    var test2:=EncodeBase64(killActions);
    print(test);
    print(test2);

    if(currentActions.Size())
        SetObjProperty(who, "QuestCurrentActionKill", currentActions);
    else

        //QuestMissionAward(who, action, missionElem);
    endif

    SendSysMessage(who, "actionKill", 3, 67);
    return;
endprogram

use uo; 
use cfgfile;
//use datafile;
use util;
use unicode;
use math;

//include "../../include/gumps";
//include "../../include/gumpUtil";
include ":datafile:datafile";

include ":pubg:lootgroup";

var qz_loot := ReadConfigFile(":pubg:questzone_loot");
var conttypes := array{2637,2639,2641,2643,2717,2718,2711,2604,2608,3701,3702,3703,3705,3644,3647,3648,3649,3650,3651};
var qz_questzone := ReadConfigFile(":pubg:questzone");
var entries2 := GetConfigStringKeys(qz_questzone);
	
var qz_locationloot := ReadConfigFile(":pubg:questzone_locationloot");

//var data_file := DFOpenDataFile(":pubg:LootItems", DF_CREATE);

var data_file := OpenDataFile( ":pubg:loots" );
if(!data_file)
    data_file := CreateDataFile( ":pubg:loots", DF_KEYTYPE_STRING );
endif

program questzoneloot(who)
	//var split := SplitWords(info);
	SendSysMessage(who, "Created by Panic",3,67);


  
  
    var QZGumpLayout:=array;
	var QZGumpData := array;

	var GWidth:=400;
	var GHeight:=300;
	QZGumpLayout.append("page 0");
	QZGumpLayout.append("resizepic 0 0 2600 "+GWidth+" "+GHeight);
	//QZGumpLayout.append("GumpPic 15 40 57");
	//QZGumpLayout.append("GumpPic 100 40 2091");
	//QZGumpLayout.append("GumpPic 350 40 59");



    //var lootgroups2 := GetConfigIntKeys(qz_loot);

    QZGumpData.append("Quest zone");
    QZGumpLayout.append("text 50 15 67 0");

    QZGumpData.append("By Panic (v1.0)");
    QZGumpLayout.append("text 230 15 954 1");

    QZGumpData.append("Add loot");
    QZGumpLayout.append("text 180 60 67 2");
    QZGumpLayout.append("button 160 65 1209 1210 1 0 100");


    QZGumpData.append("Remove loot");
    QZGumpLayout.append("text 290 60 33 3");
    QZGumpLayout.append("button 270 65 1209 1210 1 0 101");


    QZGumpData.append("Spawn NPCs");
    QZGumpLayout.append("text 290 120 67 4");

    //print(QZGumpData.size());

    var padding:=100;

    foreach i in entries2
    var elem := qz_questzone[i];
        padding:=padding + 30 * i + 20;
        QZGumpData.append(elem.name+" (dmg: "+elem.damage+", dmg speed: "+elem.dmgSpeed+")");
        QZGumpLayout.append("text 20 "+(padding)+" 32 "+(QZGumpData.size() - 1));
        QZGumpData.append(elem.range);
        QZGumpLayout.append("text 20 "+(padding + 20)+" 954 "+(QZGumpData.size() - 1));



        QZGumpLayout.append("button 320 "+(padding + 5)+" 2117 2118 1 0 20"+i);
        //QZGumpLayout.append("button 120 "+(padding + 5)+" 4018 4019 1 0 "+i+"03");
        //QZGumpLayout.append("button 180 "+(padding + 5)+" 4018 4019 1 0 "+i+"04");
    endforeach
	

    var choice := SendDialogGump( who, QZGumpLayout, QZGumpData );
    var his_choice;
    foreach key in ( choice.keys )
        his_choice := key;
    endforeach




    case ( his_choice )
        100: createLoots(who);
        101: clearLoots(who);
        //200: createNpc(who,qz_questzone[1]);
        //202: output := "remove 202";
        //104: output := "create zone";
        //default: output := "Canceled.";
    endcase

    /*var radius:=20;
    var centerX:=1224;
    var centerY:=1724;



    var range := SplitWords((centerX - radius)+" "+(centerY - radius)+" "+(centerX + radius)+" "+(centerY + radius));

    if((who.x >= CInt(range[1])) && (who.x <= CInt(range[3])) && (who.y >= CInt(range[2])) && (who.y <= CInt(range[4])))
		SendSysMessage( who, "GZ" );

    endif
	    if((who.x <= CInt(range[1])) && (who.x <= CInt(range[3])) && (who.y <= CInt(range[2])) && (who.y <= CInt(range[4])))
		SendSysMessage( who, "OUT GZ" );

    endif*/


endprogram



function createNpc(who,id)
//var params := qz_questzone[id]
//var res:= SendTextEntryGump(who,"Radius");
//if (TypeOf(res) != "Integer")
//		SendSysMessage(who, "Only Int!!! "+CStr(TypeOf(CInt(res))));
///return;
//endif;
//res:=CInt(res);

var range := SplitWords(qz_questzone[id].range);

	//return;
//if(res > 0)
var padding:=10;
var i,z;
var npcName := "dog";
//var zoneRange:=CInt(res);
//var radius:=padding*zoneRange;
//var xtop := who.x;
//var ytop := who.y;
//var xbottom := who.x + radius;
//var ybottom := who.y + radius;

var xtop := CInt(range[1]);
var ytop := CInt(range[2]);
var xbottom := CInt(range[3]);
var ybottom := CInt(range[4]);

//create top bottom corner
CreateNpcFromTemplate(npcName, xtop, ytop,0);
CreateNpcFromTemplate(npcName, xbottom + padding, ybottom,0);
var y1;
var total := Ceil(xbottom - xtop);

for( z := 1; z <= Ceil(total / padding); z := z + 1 )
CreateNpcFromTemplate(npcName, xtop, ytop + (padding * z),0);
CreateNpcFromTemplate(npcName, xtop + (padding * z), ytop,0);

CreateNpcFromTemplate(npcName, xbottom + padding, ybottom - (padding * z),0);
CreateNpcFromTemplate(npcName, xbottom + padding - (padding * z), ybottom,0);

endfor;


for( i := 1; i <= total; i := i + 1 )
	SendSysMessage(who, "create npc");
	y1 := ytop + (padding * i);
	if((total / padding) < y1)
	//CreateNpcFromTemplate(npcName, xtop, ytop + (padding * i),0);
	endif
	//CreateNpcFromTemplate(npcName, xtop + (padding * i), ytop,0);
	//CreateNpcFromTemplate(npcName, xbottom + padding, ybottom - (padding * i),0);
	//CreateNpcFromTemplate(npcName, xbottom + padding - (padding * i), ybottom,0);
endfor
//endif
endfunction




function createLoots(who)

    var entries := GetConfigStringKeys(qz_locationloot);
    var element;
    var point;
    var cont;

	
    //3703 bochka
	
	clearLoots(who);


    if(!data_file)
       print(data_file.errortext);
    endif

    var lootgroups := GetConfigIntKeys(qz_loot);
    var counter := 1;
    foreach listing in entries
        element :=  qz_locationloot[listing];
	    var randcont := RandomDiceRoll("1d"+len(conttypes));
        cont := element.conttype;
	    point := element.point;
        point := SplitWords(point);

        var coord := struct;
        coord.+x := CInt(point[1]);
        coord.+y := CInt(point[2]);
        if(point[3])
            coord.+z := CInt(point[3]);
        else
            coord.+z := GetMapInfo(CInt(point[1]), CInt(point[2]),who.realm).z;
        endif
        //conttypes[randcont]

        //если тип не указал указывает случайный из списка
        if(!cont)
            cont:=conttypes[randcont];
        endif



		var data_elem := data_file.CreateElement("loot"+counter);
        if(!data_elem)
            SendSysMessage(who, "DFFindElement: "+data_elem.errortext);
            return;
        endif


        var container := CreateItemAtLocation (coord.x, coord.y, coord.z, cont, 1, who.realm);

	    if(!container)
	    	SendSysMessage(who, "Error create loot container "+container.errortext);
	    	return;
	    endif;

        data_elem.SetProp("serial", container.serial);
        SleepMS(2);
        print("serial: "+container.serial);



	    container.movable := 0;
	    //container.color := 67;

        CreateFromGroup(container, data_elem, RandomInt(len(lootgroups)));
	    counter:=counter+1;
    endforeach

    SendSysMessage(who, "Create locations: "+CStr(counter));
    return 1;
endfunction

function clearLoots(who)

    var entries := GetConfigStringKeys(qz_locationloot);
    var element;
    var point;
    var counter:=1;
    var cont;
    print("clearLoots");

    foreach l in entries
        //var df := DFFindElement(data_file, "loot"+counter, DF_NO_CREATE);
		var data_elem := data_file.FindElement("loot"+counter);

        foreach itemb in (data_elem.GetProp("items"))
            var serial := SystemFindObjectBySerial(itemb, SYSFIND_SEARCH_OFFLINE_MOBILES);
            DestroyItem(serial);
            SleepMS(2);
        endforeach

        var itemloot := SystemFindObjectBySerial(CInt(data_elem.GetProp("serial")), SYSFIND_SEARCH_OFFLINE_MOBILES);
        print("itemloot "+itemloot);
        DestroyItem(itemloot);

        SleepMS(2);
        //print(data_elem.GetProp("items"));


        counter:=counter+1;

    endforeach
    if(counter)
        SendSysMessage(who, "Destroy locations: "+CStr(counter));
    endif
    //UnloadDataFile(":pubg:LootItems");
    //DFPurgeFile(data_file);
    return 1;
endfunction

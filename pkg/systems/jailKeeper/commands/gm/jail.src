/*
        Created by *Edwards

        2008-10-11
*/
use uo;
use os;
use vitals;

include ":gumps:gumps";
include ":gumps:gumps_ex";
include ":gumps:requestGump";
include ":timeutils:time";
include ":security:commandReport";
include ":jailKeeper:jailKeeper";
include ":datafile:datafile";
include "include/security";
include ":attributes:attributes";
include "include/client";
include ":DiscordWebhook:outbound";

var rulesCfg := ReadConfigFile(":jailKeeper:rules");

program textcmd_jail( mobile )

    if( !AuthorizationCode( mobile ))
        SendSysMessage( mobile, "Cancelled." );
        return 0;
    endif

	SendSysMessage(mobile, "Select target.");
	var jailed := Target(mobile);
	if (!jailed.isA(POLCLASS_MOBILE))
		SendSysMessage(mobile, "Cancelled.");
		return;
	endif


    var gump := GFCreateGump(100, 100);
	GFResizePic( gump, 0, 0, GFGetCfgConst( "Defaults", "BackGround" ), 410, 420 );
	GFResizePic( gump, 15, 15, GFGetCfgConst( "Defaults", "ForeGround" ), 380, 390 );
    GFTextLine( gump, 25, 20, 2100, "Player: "+jailed.name );
	GFTextLine( gump, 355, 20, 2100, "Jail" );

	GFTextLine( gump, 120, 20, 2100, "Forgive" );
    GFAddButton( gump, 120, 20, 2117, 2118, GF_CLOSE_BTN, 100 );

    var names_list := GetConfigMaxIntKey( rulesCfg );
	var counter := 0;
	var y_pos := 45;

	GFPage( gump, 1 );

    var i:=0;
	for(i:=1; i<=names_list; i:=i+1)

        GFTextCrop(gump, 25, y_pos, 330, 50, 2100, rulesCfg[i].Name+" ("+rulesCfg[i].Days+" days)");
        GFAddButton( gump, 365, y_pos, 2117, 2118, GF_CLOSE_BTN, 100 + i );

		y_pos += 20;
		counter += 1;

		if ( counter >= 10 && i < names_list )
			GFAddButton( gump, 180, 375, 9903, 9904, GF_PAGE_BTN, gump.cur_page+1 );
			GFPage( gump, gump.cur_page+1 );
			GFAddButton( gump, 100, 375, 9909, 9910, GF_PAGE_BTN, gump.cur_page-1 );
			counter := 0;
			y_pos := 40;
		endif
    endfor


	var input := GFSendGump( mobile, gump );
	input := input[0];

	if( !input )
		SendSysMessage( mobile, "Cancelled." );
		return 0;
	endif

    if(input == 100)
        CMD_ReportText( mobile, "Character:"+jailed.name, CMD_REPORT_SYSLOG );

        var script := start_script( ":jailKeeper:getOutJail", jailed );
        if( script.errortext )
            SendSysMessage( mobile, "Error starting script <:jailKeeper:getOutJail> -->"+script.errortext );
            return 0;
        endif
        return 1;
    else
        return JailPlayer( mobile, jailed, CInt(rulesCfg[input - 100].Days));
    endif

endprogram


function JailPlayer( mobile, jailed, days )

    var time := GetJTime( mobile, jailed, days );
    if( time )
        var message_txt := RequestInput( mobile, mobile.backpack, "Please insert a description of your decision to be sent to "+jailed.name+". (hit escape to cancel)" );
        if( !message_txt )
            SendSysMessage( mobile, "Cancelled." );
            return 0;
        endif

        //var script := start_script( ":accounts:commands/coun/acctnote", {mobile, jailed.acctname} );
        //if( script.errortext )
        //    SendSysMessage( mobile, "Error starting script <:accounts:commands/coun/acctnote> -->"+script.errortext );
        //endif

        SendSysMessage( jailed, "You receive a notification from staff:", 3, 55 );
        SendSysMessage( jailed, mobile.name+" >>> "+message_txt, 3, 55 );

        MovePlayer( mobile, jailed, message_txt );

        CMD_ReportText( mobile, time+" day(s) character:"+jailed.serial+" Description is:"+message_txt, CMD_REPORT_SYSLOG );
    endif

    return 1;
endfunction

function GetJTime( mobile, jailed, days )

	/*var jail_time := RequestGump( mobile, "How many days do you want to jail "+jailed.name+"?","", CStr( GetNumJailDays( jailed )), 1 );
	if( !jail_time )
		SendSysMessage( mobile, "Cancelled." );
		return 0;
	else
		jail_time := CInt( jail_time );
	endif*/
    var jail_time := days;
	if( jail_time == 0 )
        var script := start_script( ":jailKeeper:getOutJail", mobile );
        if( script.errortext )
            SendSysMessage( mobile, "Error starting script <:jailKeeper:getOutJail> -->"+script.errortext );
            return 0;
        endif

        return 0;
	else
		if( jail_time > 0 )
			jail_time := jail_time * SECONDS_IN_DAY;
            var data_elem := DFFindElement( g_datafile, jailed.serial, DF_CREATE );
            data_elem.SetProp( "JailReleaseTime", POLCore().systime + jail_time );
            data_elem.SetProp( "JailByAccount", mobile.acctname );
            data_elem.SetProp( "JailByName", mobile.name );
		endif
	endif

	return jail_time;
endfunction

function GetNumJailDays( jailed )

    var data_elem := DFFindElement( g_datafile, jailed.serial );
    var seconds := data_elem.GetProp( "JailReleaseTime" );
	if( !seconds )
		return 0;
	endif

	var num_days := CInt(( seconds - POLCore().systime) / SECONDS_IN_DAY )+1;
	return num_days;
endfunction

function MovePlayer( mobile, jailed, message )

    var cell := RandomIntMinMax(1, 10);
    var data_elem := DFFindElement( g_datafile, jailed.serial, DF_CREATE );

    data_elem.SetProp( "JailCell", cell );
    data_elem.SetProp( "JailReason", message );

    Goto_Cell( jailed );
    JailedPlayer(jailed);


    var days := GetNumJailDays( jailed );
    var discordText := "**" + jailed.name + "** Был отправлен в тюрьму. :rage:";
    var embeds := struct;
    embeds.+title := "Дней: "+days;
    embeds.+color := 1127128;

    var outbound := PresetDiscordMessage( discordText, "jail", embeds);

    return 1;
endfunction


function JailedPlayer(player)
    var mount :=  GetEquipmentByLayer( player, LAYER_MOUNT );
    RevokePrivilege(player, "invul" );
    SetObjProperty(player, "guardkill", 1);
    ApplyRawDamage(player, GetMaxHp(player) + 1, 0, 0 );

    if (mount)
        var orig_serial := CInt(GetObjProperty(mount, "serial"));
        var animal := SystemFindObjectBySerial(orig_serial);
        RevokePrivilege( animal, "invul" );
        SetObjProperty(animal, "guardkill", 1);
        ApplyRawDamage(animal, GetMaxHp(animal) + 1, 0, 0 );
    endif

endfunction
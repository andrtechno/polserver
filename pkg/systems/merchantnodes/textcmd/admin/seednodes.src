use uo;
use os;
use cliloc;
use cfgfile;

include "include/mrcSpawn";
include ":gumps:selectionGump";

program textcmd_seednode(who)
	var facets := {"Felucca", "Trammel", "Ilshenar", "Malas", "Tokuno", "Termur"};
	var facet := SelectionGumpEx( who, "Grab the ndes from which facet?", facets , btn_type:=BTN_TYPE_RADIO );
	if(!facet)
		SendSysMessageCL(who, 1042023, color := 33); // Cancelled.
		return 0;
	endif
	var file_name := "";
	var map := "";
	case(facet)
		"Felucca":	map := "britannia";
		"Trammel":	map := "britannia_alt";
		"Ilshenar":	map := Lower(facet);
		"Malas":	map := Lower(facet);
		"Tokuno":	map := Lower(facet);
		"Termur":	map := Lower(facet);
	endcase

	file_name := ":merchantnodes:packedNodes-for-" + facet;

	var cfg := ReadConfigFile(file_name);
	if(cfg.errortext)
		SendSysMessage(who, cfg.errortext, 33);
		return 0;
	endif
	var node_desc := 0,
		data := 0;
	foreach thing in ( GetConfigStringKeys( cfg ) )
		data := Unpack( cfg[thing].data );
		if( thing["guard"] )
			node_desc := GetItemDescriptor( 0x1887B );
			foreach entry in ( data )
				node_desc.CProps.Insert( entry[1], entry[2] );
			endforeach
		else
			node_desc := GetItemDescriptor( 0x1887A );
			foreach entry in ( data )
				node_desc.CProps.Insert( entry[1], entry[2] );
				if( entry[1] == "Type" )
					foreach type in ( entry[2] )
						create_node_merc( type[1], type[1] + " " + type[2][1] + " " + type[2][2] + " " + type[2][3] );
					endforeach
				endif
			endforeach
		endif
		node_desc.Color := 53;
		node_desc.Invisible := 1;
		node_desc.Movable := 0;
		CreateItemAtLocation( cfg[thing].x, cfg[thing].y, cfg[thing].z, node_desc, 1, map );
	endforeach
	SendSysMessage(who, "Finished seeding nodes", 0x3, 0x42 );
endprogram
use uo;
use os;
use cfgfile;

include ":combat:hitScripts";
include ":damage:damage";
include ":combatBook:combatAbility";

var npccfgfile := ReadConfigFile( "::npcdesc" );
var g_ability_cfg := ReadConfigFile(":combatBook:abilities");
var ability;

program WrestlingHitScript(attacker, defender, weapon, armor, basedamage, rawdamage)
    SendSysMessage(attacker, "WrestlingHitScript");
    SendSysMessage(attacker, "Start rawdamage: "+rawdamage);
    SendSysMessage(attacker, "Start basedamage: "+basedamage);
    print("Start armor: "+armor);
	if(defender == attacker)
		SendSysMessage(attacker, "No Cheating");
		ApplyRawDamage(attacker, 1000);
		return;
	endif


	if((attacker.npctemplate == "townguard") or (attacker.npctemplate == "playervendor"))
		ApplyRawDamage(defender, 1000);
		return;
	endif
	if(defender.isA(POLCLASS_NPC))
		var damagedsound := CInt(npccfgfile[defender.npctemplate].damagedsound);
		if(damagedsound)
			PlaySoundEffect(defender, damagedsound);
		endif
		PerformAction(defender, 0xa);
		basedamage := basedamage * 2;
		rawdamage := rawdamage * 2;
		SendSysMessage(attacker, "Player vs NPC");
	else
		if(attacker.acctname && defender.acctname)
			//basedamage := basedamage / 2;
			//rawdamage := rawdamage / 2;
			SendSysMessage(attacker, "Player vs Player");
		endif
	endif
	var shield := GetEquipmentByLayer(defender, 2);
	if(shield)
		var bd;
		if(basedamage > 100)
			bd := 100;
		else
			bd := basedamage;
		endif
		if(RandomInt(Cint(AP_GetSkill(defender, PARRYING) / 2)) >= bd)
			armor := shield;
		endif
	endif
	var weaponhit := GetObjProperty(attacker, "OnHit");
	var armorhit;
	if (armor == 0)
		armorhit := GetObjProperty(defender, "ArmorHit");
	else
		armorhit := GetObjProperty(armor, "ArmorHit");
	endif
	var x;
	var anatomy;

    ability := CInt(GetObjProperty(attacker, "Ability"));
    var ab := AbilityChecks(attacker, defender, CInt(rawdamage));
    if(ab.damage)
        rawdamage := CInt(ab.damage);
        SendSysMessage(attacker, "Ability: "+rawdamage);
    endif

    var str := CInt(AP_GetStat(attacker, STRENGTH)) / 10;
    var level := CInt(GetObjProperty(attacker, "classlevel"));
    SendSysMessage(attacker, "Start ar: "+defender.ar);
	var ar := CInt(defender.ar) / 2;
    SendSysMessage(attacker, "End ar: "+ar);
    var wrestling := CInt(AP_GetSkill(attacker, WRESTLING));
	if (!weaponhit)
		if (!armorhit)

			run_script_to_completion("reactiveArmorHit", { attacker, defender, weapon, armor, basedamage, rawdamage } );

			if(rawdamage < 1)
				rawdamage := 1;
			endif
			anatomy := CInt(AP_GetSkill(attacker, ANATOMY) / 20);
			rawdamage := CInt(rawdamage + anatomy);

			// This next line appears to increase that damage too high.
			rawdamage := rawdamage + RandomInt( wrestling / 20);

            SkillCheck(attacker, attacker.weapon.attribute, -1, "", 0x1);
            SkillCheck(attacker, TACTICS, -1, "", 0x1);


            var percent := CInt(level * 2);
            var number_percent := rawdamage / 100 * percent;
            rawdamage := rawdamage + number_percent;


            SendSysMessage(attacker, "finish dmg: "+rawdamage);
			ApplyRawDamageEX(defender, rawdamage, DMG_PHYSICAL, attacker);
			return;
		else

			foreach x in armorhit
				Detach();
				set_critical(0);
				run_script_to_completion(x, { attacker, defender, weapon, armor, basedamage, rawdamage } );

			endforeach

			run_script_to_completion("reactiveArmorHit", { attacker, defender, weapon, armor, basedamage, rawdamage } );

			if(rawdamage < 1)
				rawdamage := 1;
			endif
			anatomy := Cint(AP_GetSkill(attacker, ANATOMY) / 20);
			rawdamage := Cint(rawdamage + anatomy);
			// This next line appears to increase that damage too high.
			rawdamage := rawdamage + RandomInt( CInt((AP_GetSkill(attacker, ANATOMY) ) / 20));

            SkillCheck(attacker, attacker.weapon.attribute, -1, "", 0x1);
            SkillCheck(attacker, TACTICS, -1, "", 0x1);

            print("sssssssss22222222222ssssssss");
			ApplyRawDamageEX(defender, rawdamage, DMG_PHYSICAL, attacker);

			//SetObjProperty(defender, "LastHit", {attacker.name, attacker.serial, weapon });
			return;
		endif
	else

		foreach x in weaponhit
			Detach();
			set_critical(0);
			run_script_to_completion(CStr(x), { attacker, defender, weapon, armor, basedamage, rawdamage } );

			endforeach

		if (rawdamage < 1)
			rawdamage := 1;
		endif
		run_script_to_completion("reactiveArmorHit", { attacker, defender, weapon, armor, basedamage, rawdamage } );

		if(rawdamage < 1)
			rawdamage := 1;
		endif
		anatomy := Cint(GetEffectiveSkill(attacker, SKILLID_ANATOMY) / 20);
		rawdamage := Cint(rawdamage + anatomy);
		// This next line appears to increase that damage too high.
		rawdamage := rawdamage + RandomInt( CInt((AP_GetSkill(attacker, ANATOMY) ) / 20));

        SkillCheck(attacker, attacker.weapon.attribute, -1, "", 0x1);
        SkillCheck(attacker, TACTICS, -1, "", 0x1);
        print("ssssssssssss");
		ApplyRawDamageEX(defender, rawdamage, DMG_PHYSICAL, attacker);
		return;
	endif
endprogram



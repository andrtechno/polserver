//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PKG: housing                                                                                                 //
// version: 1.0                                                                                                 //
// Maintainer: Bishop Ebonhand                                                                                  //
// email: bish0p@cfl.rr.com                                                                                     //
//                                                                                                              //
// notes:                                                                                                       //
//   this housing package includes static housing as well as the typical multi type housing.                    //
//                                                                                                              //
// known issues:                                                                                                //
//  stacking "solid" objects causes some wierdness with the multi.items list, and as a result a player may      //
//  not be able to lock down items on tables within their homes.. when a fix or workaround becomes available    //
//  I will update this script accordingly...                                                                    //
//                                                                                                              //
//  newhomeinfo array format is as follows:                                                                     //
//                                                                                                              //
//    North West Corner coords, South East Corner coords, sign serial, NW Z, SE Z, num lockdowns, num secures   //
//                                                                                                              //
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//
//	homeinfo[1] = NW X coord
//	homeinfo[2] = NW Y coord
//	homeinfo[3] = SE X coord
//	homeinfo[4] = SE Y coord
//	homeinfo[5] = sign serial number
//	homeinfo[6] = number of levels * 20
//	homeinfo[7] = Base Z level for the house
//	homeinfo[8] = num lockdowns
//	homeinfo[9]	= num secures
//
use uo;
use os;
use util;
use basicio;
use basic;
use cfgfile;

include "util/key";
include "include/objtype";
const UOBJECT_BRASS_SIGN := 0x0bd2;
const UOBJECT_WOOD_SIGN := 0x0bd0;
const UOBJECT_TENT_CHEST := 0x0e43;

var cfg;
var colors;
var num_colors;

UnloadConfigFile( ":housing:settings" );
var	housing_cfg := ReadConfigFile(":housing:settings");
if(!housing_cfg)
	Broadcast("No housing settings file found.");
endif

program textcmd_staticdeed( who, textline)
	var unit_price, stories;
	var	elem := FindConfigElem( housing_cfg, "Settings" );
	var	default_price := CInt(GetConfigInt( elem, "Price_Per_Square" ));
	var	multi_level_discount := CInt(GetConfigInt( elem, "Multi_level_Discount" ));

	unit_price := CInt(textline);
	if(!unit_price)
		SendSysMessage(who, "Defaulting to " + CStr(default_price) + " gold per square from house settings.", color := 88);
	    unit_price := default_price;
	endif
    Buildhouse( who, unit_price, multi_level_discount );
endprogram

function Buildhouse( who, p_s_price, m_level_discount )
	SendSysMessage(who, "Where shall I create the sign?", color := 88);
	var where := TargetCoordinates(who);
	if (!where)
	    SendSysMessage(who, "Cancelled.", color := 40);
	    return;
	endif
    var createsign  := makesign(who, where.x, where.y, where.z, where.realm, p_s_price, m_level_discount);
	if (!createsign)
		SendSysMessage( who, "ERROR: Unable to create sign!" );
		return;
	endif
/*    set_critical( 1 );
    var created := CreateBuiltDeed(who, where.x, where.y, where.z, createsign);
    set_critical( 0 );
    if (!created)
	SendSysMessage( who, "ERROR: Unable to create built deed!", color := 33 );
      return;
    endif */
endfunction

function CreateBuiltDeed( who, x, y, z, sign)
    var builtdeed := CreateItemInBackpack( who, 0x160fe );
    if (!builtdeed)
      PrintTextAbovePrivate( who, "My backpack is too full!", who );
      return 0; // not built
    endif
    var area := boundaries(who, builtdeed, sign);
    area := area;
    SetName(builtdeed, "a static house at " + x + ", " + y + ", " + z + "." );
    SetObjProperty(sign,"builtdeed", builtdeed.serial);
    SetObjProperty(builtdeed, "Price", area * PRICE_PER_SQUARE);
    SetObjProperty(builtdeed, "NewHouse", 1);
    SendSysMessage(who, "Renaming sign.", color := 88);
    sign.name := "For Sale " + area * PRICE_PER_SQUARE + " Gold.";
    return 1; // built ok!
endfunction

function makesign( who, x, y, z, map, price_per_square, m_level_discount)
    var boxmenu := CreateMenu("Select a sign type:");
	var levels;
    AddMenuItem(boxmenu,0xbd1,"brass");
    AddMenuItem(boxmenu,0xbd2,"brass2");
    AddMenuItem(boxmenu,0xbcf,"wooden");
    AddMenuItem(boxmenu,0xbd0,"wooden2");
    var selection := SelectMenuItem2(who, boxmenu);
    var postgraphic;
    var signgraphic, total_price, junk;
    if (selection.objtype == 0xbd1)
      postgraphic := 0xb99;
      signgraphic := 0xbd1;
    elseif (selection.objtype == 0xbd2)
      postgraphic := 0xb98;
      signgraphic := 0xbd2;
    elseif (selection.objtype == 0xbcf)
      postgraphic := 0xb99;
      signgraphic := 0xbcf;
    elseif (selection.objtype == 0xbd0)
      postgraphic := 0xb98;
      signgraphic := 0xbd0;
    endif
	if (!selection)
	  return;
	endif
	var sign := CreateItemAtLocation( x, y, z, 0x160ff, 1, map );
	if (!sign)
	  return;
	endif
	sign.graphic := signgraphic;
	sign.movable := 0;
	var area := boundaries(who, sign);
	total_price := area[1] * price_per_square;
	// For every additional level of a structure we divide the base price by a multi-level modifier.
	// But first we have to take away the first level because
	// that's contained in the base price.
	levels := CInt((area[2] - area[3])/20);
	junk := levels * CInt(total_price/m_level_discount);
	// Now we add the storey modifier.
	total_price := total_price + junk;
	SetObjProperty(sign, "Price", total_price);
	SetObjProperty(sign, "NewHouse", 1);
	sign.name := "For Sale " + total_price + " Gold.";

    return sign;
endfunction

function boundaries(who, sign)
	var homeinfo := { };
	var coords := 0, xt, yt, area;
	while ( !coords )
	  SendSysMessage(who,"Target the North-West corner at the top most floor of the house (Upper corner)", color := 88);
	  coords := TargetCoordinates(who);
	endwhile
	homeinfo[1] := coords.x;
	homeinfo[2] := coords.y;
	homeinfo[6] := who.z;		// use who.z incase there is a static item at the targetted loc.
	Sleep(1);
	coords := 0;
	while( !coords )
	    SendSysMessage(who,"Target the first floor South-East corner of the house (Lower corner)", color := 88);
	    coords := TargetCoordinates(who);
	endwhile
	homeinfo[3] := coords.x;
	homeinfo[4] := coords.y;
	homeinfo[5] := sign.serial;
	xt := homeinfo[3]-homeinfo[1];
	yt := homeinfo[4]-homeinfo[2];
	homeinfo[7] := who.z;		// use who.z incase there is a static item at the targetted loc.
	area := xt * yt;
	var numlockdowns := figurelockdowns( homeinfo[1], homeinfo[2], homeinfo[6], homeinfo[3], homeinfo[4], homeinfo[7]);
	var numsecures   := figuresecures( homeinfo[1], homeinfo[2], homeinfo[6], homeinfo[3], homeinfo[4], homeinfo[7]);
	homeinfo[8] := numlockdowns;
	homeinfo[9] := numsecures;
	SetObjProperty(sign, "newhomeinfo", homeinfo);
	SendSysMessage(who,"You have successfully deeded this house.", color := 66);
	return {area, homeinfo[6], homeinfo[7]};
endfunction

function figurelockdowns( nwx, nwy, nwz, sex, sey, sez)
    var x := (sex-nwx);
    var y := (sey-nwy);
    var z := ((nwz-sez)/20);
	if(z < 1)
		z := 1;
	endif
    var a := (x*y*z);
    var l := (a/2);
//    l := l*2;
    if (l < 25)
      l := 25;
    endif
    return l;
endfunction

function figuresecures( nwx, nwy, nwz, sex, sey, sez)
    var x := (sex-nwx);
    var y := (sey-nwy);
    var z := ((nwz-sez)/20);
	if(z < 1)
		z := 1;
	endif
    var a := (x*y*z);
    var s := (a/24);
    if (s < 1)
      s := 1;
    endif
    return s;
endfunction
use os;
use unicode;
use uo;
use cfgfile;


program shrinkPotion(who, item)

	var victim  := Target(who);

    if (!victim)
		SendSysMessage(who, "Cancelled.");
		return;
	endif
    if(!CheckLineOfSight(who, victim))
        SendSysMessage(who, "You can't see that!",0,33);
        return;
    endif
    if(Distance(who,victim) > 2)
        SendSysMessageUC(who, "Растояние слишком большое.","RUS",0,33);
        return;
    endif
    if(!victim.npctemplate)
            SendSysMessageUC(who, "Это не живое.","RUS",0,33);
            return;
    endif
    if(GetObjProperty(victim,"master") != who.serial)
        SendSysMessageUC(who, "Это животное вам не принадлежит","RUS",0,33);
        return;
    endif
  var npcfile := ReadConfigFile("::npcdesc");
    var elem := FindConfigElem(npcfile, victim.npctemplate);

    var obj;
    if(victim.graphic in {0xc8, 0xe2,0xe4}) //horse2
        obj:=0x053a;
    elseif (victim.graphic == 0xcc) //horse
      obj:=0x053a1;
    elseif (victim.graphic == 0x124) //Llama
           obj:=0x053b;
    elseif (victim.graphic == 0xD2) //Desert Ostard
          obj:=0x053c;
    elseif (victim.graphic == 0xDA) //Frenzied Ostard
        obj:=0x053e;
    elseif (victim.graphic == 0xDB) //forestostard
        obj:=0x053d;
    endif
    if(!obj)
        SendSysMessageUC(who, "Это нельзя превратить в статую.","RUS",0,33);
        return;
    endif

    var name := victim.name;
    var shrink := CreateItemInBackpack(who,obj,1);

    if(!shrink)
        SendSysMessageUC(who, "Обишка: "+shrink.errortext,"RUS",0,33);
    endif
    shrink.color:=victim.color;
    if(name!=elem.Name)
        name:=name+" ["+elem.Name+"]";
    endif;
    shrink.name:=name;
    SetObjProperty(shrink,"horseserial", victim.serial);
    SetObjProperty(shrink,"npctemplate", victim.npctemplate);

   // var master := SystemFindObjectBySerial(victim.serial, SYSFIND_SEARCH_OFFLINE_MOBILES);
    var mounttype:=mounted(victim);
    //if(mounttype)
     // if(MoveObjectToLocation(master,victim.x,victim.y,victim.z,master.realm,0))
       // master.facing := victim.facing;
        //var mount := CreateItemAtLocation(5228, 1182, 0, 0x1F021,1, "britannia"); // newmap problem
       // mount.color := victim.color;
        MoveObjectToLocation(victim, 5228, 1182, 0, "britannia", MOVEOBJECT_FORCELOCATION); // newmap problem
       // mount.graphic := mounttype;
       // EquipItem(master,mount);
       // SetObjProperty(mount,"serial", victim.serial);
        //SetObjProperty(victim,"mounted", 1);
        //SetObjProperty(victim,"mounted_on", master.serial);

	//  endif
    //endif







endprogram

//Name: liche {spawn rune}
//Graphic: 0x20F8


function mounted(me)
    var mounttype := 0;
    case(me.graphic)
		0xCC: mounttype := 0x3EA2;  // Horse1
		0xC8: mounttype := 0x3E9F;  // Horse2
		0xE2: mounttype := 0x3EA0;  // Horse3
		0xE4: mounttype := 0x3EA1;  // Horse4
// Horse2?   0xC8: mounttype := 0x3E9F;  // Horse5
		////////0x580: mounttype := 0x3ECD; // horse6 palomino
		0xDC: mounttype := 0x3EA6;  // Llama
		0xD5: mounttype := 0x3ec5;  // Polar bear
		0xD2: mounttype := 0x3EA3;  // Desert Ostard
		0xDA: mounttype := 0x3EA4;  // Frenzied Ostard
		0xDB: mounttype := 0x3EA5;  // Forest Ostard
		0x75: mounttype := 0x3EA8;  // Silver Steed
//		0x74:  mounttype := 0x3EB5;  // Nightmare 1 - Nightmare NOT visible when mounted!!!
		0xB1: mounttype := 0x3EA7;  // Nightmare 2
		0xB2:  mounttype := 0x3EB6;  // Nightmare 3
		0xB3:  mounttype := 0x3EB7;  // Nightmare 4
		0x72: mounttype := 0x3EA9;  // Dark Steed
		0xBE: mounttype := 0x3e9e;  // Fire Steed
		0x73:  mounttype := 0x3EAA;  // Ethereal Horse
		0xAA:  mounttype := 0x3EAB;  // Ethereal Llama
// see 0xD2 above   0xd2:  mounttype := 0x3EAC;  // Ethereal Ostard
		0xC3:  mounttype := 0x3E97;  // Ethereal Giant Beetle
		0xC2:  mounttype := 0x3E98;  // Ethereal Swamp Dragon
		0xC1:  mounttype := 0x3E9A;  // Ethereal Ridgeback
		0xBF:  mounttype := 0x3E9C;  // Ethereal Kirin
		0xC0:  mounttype := 0x3E9D;  // Ethereal Unicorn
		0x11C: mounttype := 0x3e92;	 // MondainSteed
		0x78:  mounttype := 0x3EAF;  // Minax War Horse (Blood Red) 		warhorse5
		0x79:  mounttype := 0x3EB0;  // Shadow War Horse (Light Green)
		0x77:  mounttype := 0x3EB1;  // Mage Council War Horse (Light Blue)
		0x90:  mounttype := 0x3EB3;  // Sea Horse (Medium Blue)
		0x84:  mounttype := 0x3EAD;  // Kirin
		0x76:  mounttype := 0x3EB2;  // Britannia War Horse (Purple)
		0x7A:  mounttype := 0x3EB4;  // Unicorn
		0xBB:  mounttype := 0x3EB8;  // Ridgeback
		0xBC:  mounttype := 0x3EBA;  // Ridgeback, Savage
		0xF3:  mounttype := 0x3e94;  // Hai-Riyo
		0x114: mounttype := 0x3e90;	 // Raptalon - not sure about the mounttype though
		0x115: mounttype := 0x3e91;	 // CuShidhe - not sure about the mounttype though
		0x319:  mounttype := 0x3EBB;  // Skeletal Mount
		0xA9:  mounttype := 0x3e95;  // Giant Beetle
		0x317:  mounttype := 0x3EBC;  // Giant Beetle2
		0x31A:  mounttype := 0x3EBD;  // SwampDragon
		0x31F:  mounttype := 0x3EBE;  // Armored Swamp Dragon
		0x180:  mounttype := 0x3ec6;  // Armored Boura
		0x4E6:  mounttype := 0x3ec7;  // Tiger
		0x579:  mounttype := 0x3ECA;  // Giant Tarantula
		0x42d:  mounttype := 0x3ec9;  // Hell Hound
		0x4E7:  mounttype := 0x3ec8;  // Etherial Tiger
		0x582:	mounttype := 0x3ECC; // Windrunner
		0x59A:	mounttype := 0x3ECE; // Serpentine Dragon
    endcase
return mounttype;
endfunction

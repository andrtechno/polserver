use uo;
use os;
use util;

include "include/security";
include ":security:report";

const DECAY_TIME := 10;		// In minutes. 10

program control_Corpse( corpse )
    var beardlist := {0x203e, 0x203f, 0x2040, 0x2041, 0x204b, 0x204c, 0x204d };
    var hairlist  := {0x2044, 0x2045, 0x2046, 0x2047, 0x2048, 0x2049, 0x204a, 0x203b, 0x203c, 0x203d };
    var bonearray := array(0xed2, 0xed1, 0xed0, 0xecf, 0xece, 0xecd, 0xecc, 0xecb, 0xeca);
	if( corpse.NPCTemplate() )
		// Dont need to do the skeleton break-down for npc corpses.
		corpse.SetDestroyable(1);
		var createNpc := GetObjProperty(corpse, "OnDeathCreateNpcTemplate");
		if(createNpc)
            CreateNpcFromTemplate(createNpc, corpse.x, corpse.y, corpse.z, 0);
		endif
		return 1;
	endif
    corpse.CanDecay(0);
    Sleep( DECAY_TIME * 60 );
	corpse.color	:= 0;
    corpse.graphic	:= 0xeca + RandomInt(9);

	var name := corpse.name;
	name["A corpse"] := "Remains";
	SetName( corpse, name );


    var bones := CreateItemAtLocation(corpse.x, corpse.y, corpse.z, bonearray[RandomInt(9)+1], 1, corpse.realm);
    var newname := corpse.name["A corpse of "] := "";
    bones.name := "remains of " + newname;
    foreach thing in EnumerateItemsInContainer(corpse)
        if((thing.objtype in beardlist) || (thing.objtype in hairlist))
            DestroyItem(thing);
        elseif(thing.movable == 0)
            DestroyItem(thing);
        else
            MoveItemToContainer(thing, bones);
            thing.decayAt := ReadGameClock() + 600;
        endif
    endforeach
    DestroyItem(corpse);
    start_script("corpse/boneControl", bones);

    return 1;
endprogram

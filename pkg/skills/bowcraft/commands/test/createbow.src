use cfgfile;
use uo;
use os;

include "include/client";
include "include/objtype";
include "include/canAccess";
include ":gumps:gumps";
include ":gumps:gumps_ex";

//include ":attributes:attributes";
include ":crafting:crafting";
include ":crafting:craftingRepair";
include ":crafting:toolWear";
var smith_cfg := ReadConfigFile("blacksmithy");
var craftername;

//var _config  := ReadConfigFile(":logs:itemdesc");
var craft_config := ReadConfigFile(":bowcraft:bowcraft");

program textcmd_createbow(who)
    craftername := who.name;

    var xObject := SystemFindObjectBySerial(0x400eb72f);
    var weapondesc := GetItemDescriptor(xObject.objtype);
    var damagefactor := (xObject.hp * xObject.quality) / xObject.maxhp;

    var quality := ((0.36) * 10);

quality:=0.20 * 14; //14

    var x := 15;
    var y := 15;
    var metal;
    var flagBow := 0;
    //var flagCrossBow := 0;
    //var flagHeavyCrossBow := 0;
    var temp;
	var gump := GFCreateGump( 20, 50 );
	GFPage( gump, 1 );
	var widthGump := 300;
    var heightGump := 400;
	GFResizePic( gump, 0, 0, GFGetCfgConst("Defaults", "ForeGround"), widthGump, heightGump);
    GFTextLine(gump, 75, y, 33, "Admin Bow's Menu" );

    var ingots := {
        0x1bdd,
        0x26300,
        0x26301,
        0x26302,
        0x26303,
        0x26304,
        0x26305,
        0x26306,
        0x26307,
        0x26308,
        0x26309,
        0x2630A,
        0x2630B,
        0x2630C,
        0x2630D,
        0x2630E,
        0x2630F
    };


	GFSetRadioGroup(gump, 1);

    y+=35;
    var index := 1;
    foreach ingot in ingots
        var desc := GetItemDescriptor(ingot);
        var name := desc.name;
        name["Ingot"]:="";
        GFRadioButton( gump, x, y, 208, 209, 0, 100 + index );
        GFTextLine(gump, x + 25, y, 2100, name );
        y+=20;
        index+=1;
    endforeach

    x := 150;
    y := 50;
    index := 300;
    foreach iname in {"Bow","CrossBow", "HeavyCrossBow"}
        var ret := GetItemDescriptor(iname);
        //(byref gump, x, y, unc_id, che_id, status:=0, btn_value:=0)
        GFCheckBox(gump, x, y, 210, 211, 0, index);
        GFTextLine(gump, x + 25, y, 1153, iname);
        y+=25;
        index+=1;
    endforeach

    y+=15;
    GFTextLine(gump, 150, y, 2100, "Crafted By:" );
    GFResizePic(gump, 150, y +25, 2620, 130, 30);

    var crafted := GFTextEntry(gump, 150 + 8, y + 30, 135, 20, 2100, craftername, 400);



	GFAddButton(gump, (widthGump / 2) - 30, heightGump - 35, 247, 248, GF_CLOSE_BTN, 1);

    var input := GFSendGump( who, gump );
    foreach key in ( input.keys )
    print(key);
        if( key >= 100 && key < 200 )
            metal := ingots[(key - 100)];
        elseif(key == 300)
            flagBow:=0x13B2;
        elseif(key == 301)
            flagBow:=0xF4F;
        elseif(key == 302)
            flagBow:=0x13FD;
        elseif(key == 400)
            craftername := GFExtractData(input, key);
        endif
        SleepMS(1);

    endforeach


    if(!metal)
        SendSysMessage(who, "no select metal.");
        return;
    endif
    if(!flagBow)
        SendSysMessage(who, "no select any type.");
        return;
    endif

	var ptmod := 120;



	var theitem;
	var itemname := craft_config[flagBow].name;
	var reqd := Cint(craft_config[flagBow].skill);
    var use_on := CreateItemInBackpack(who, metal, 50);

   CreateCraftItem(who, craft_skill, use_on, use_on.objtype, flagBow, 1, itemname, -1);
   DestroyItem(use_on);
endprogram


function makeItem(metal, weapon, backpack)
    var tname;
    var nme;
    var itemname;
    var ar_mod := 0;
    var dmg_mod := 0;
    var maxhp_mod := 0;
    var quality_mod := 0;

    var theitem := CreateItemInContainer(backpack, weapon, 1);
    itemname := smith_cfg[theitem.objtype].name;
    case(metal.objtype)
            UOBJ_INGOT_COPPER:     nme := ""              + itemname;
            UOBJ_INGOT_IRON:       nme := "iron "         + itemname; ar_mod:=1; dmg_mod:=1; maxhp_mod:=1; quality_mod:=1;
            UOBJ_INGOT_STEEL:      nme := "steel "        + itemname; ar_mod:=2; dmg_mod:=2; maxhp_mod:=2; quality_mod:=2;
            UOBJ_INGOT_ANRA:       nme := "anra "         + itemname; ar_mod:=3; dmg_mod:=3; maxhp_mod:=3; quality_mod:=3;
            UOBJ_INGOT_VALORITE:   nme := "valorite "     + itemname; ar_mod:=4; dmg_mod:=4; maxhp_mod:=4; quality_mod:=4;
            UOBJ_INGOT_LAVAROCK:   nme := "lavarock "     + itemname; ar_mod:=5; dmg_mod:=5; maxhp_mod:=5; quality_mod:=5;
            UOBJ_INGOT_ICEROCK:    nme := "icerock "      + itemname; ar_mod:=6; dmg_mod:=6; maxhp_mod:=6; quality_mod:=6;
            UOBJ_INGOT_SHADOW:     nme := "shadow "       + itemname; ar_mod:=7; dmg_mod:=7; maxhp_mod:=7; quality_mod:=7;
            UOBJ_INGOT_AZURITE:    nme := "azurite "      + itemname; ar_mod:=8; dmg_mod:=8; maxhp_mod:=8; quality_mod:=8;
            UOBJ_INGOT_DOOM:       nme := "doom "         + itemname; ar_mod:=9; dmg_mod:=9; maxhp_mod:=9; quality_mod:=9;
            UOBJ_INGOT_BLUESTEEL:  nme := "bluesteel "    + itemname; ar_mod:=10; dmg_mod:=10; maxhp_mod:=10; quality_mod:=10;
            UOBJ_INGOT_DARKRUBY:   nme := "darkruby "     + itemname; ar_mod:=11; dmg_mod:=11; maxhp_mod:=11; quality_mod:=11;
            UOBJ_INGOT_CRYSTALIT:  nme := "crystalit "    + itemname; ar_mod:=12; dmg_mod:=12; maxhp_mod:=12; quality_mod:=12;
            UOBJ_INGOT_ONYX:       nme := "onyx "         + itemname; ar_mod:=13; dmg_mod:=13; maxhp_mod:=13; quality_mod:=13;
            UOBJ_INGOT_MIFRIL:     nme := "mifril "       + itemname; ar_mod:=14; dmg_mod:=14; maxhp_mod:=14; quality_mod:=14;
    endcase
    theitem.color := metal.color;
    theitem.quality := 0.26 * quality_mod;
    theitem.hp          := theitem.maxhp;
    theitem.ar_mod      := (ar_mod * 2);
    if(!theitem)
        //theitem.hit_chance := 5;
        //theitem.hit_chance_mod := 10;
    endif;


    //weapon
    //theitem.dmg_mod := dmg_mod;
    
    tname := "an exceptional " + nme;
    SetObjProperty(theitem, "craftername", craftername);
    SetName(theitem, tname);

endfunction


function CalcBaseDamage(me)
	//var base_dmg := "5d8+2";
	var base_dmg := "5d3";

	base_dmg := RandomDiceRoll(base_dmg);



	var dmg_mult := CDbl(AP_GetSkill(me, "Swordsmanship"));

    var classid := CInt(GetObjProperty(me, "classid"));
	if(classid == 2) //fighter
	    var level := CInt(GetObjProperty(me, "classlevel"));
	endif


	dmg_mult += (CDbl(AP_GetStat(me, STRENGTH)) * 0.6);
	dmg_mult := CDbl(dmg_mult * 0.03);


	base_dmg *= dmg_mult;


	return CInt(base_dmg);
endfunction
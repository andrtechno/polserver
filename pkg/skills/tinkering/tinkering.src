use uo;
use cfgfile;
use os;
use util;

include ":attributes:attributes";
include "include/client";
include "include/objtype";
include "include/math";
include ":keys:key";
include "include/canAccess";
include ":itemutils:toolWear";
include ":oldstyle-gumps:gumps";
include ":virtue:noto";
include ":damage:damage";
include ":traps:traps";

var keys := {0x100e, 0x100f, 0x100f, 0x1012, 0x1013};
var tinker_cfg:= ReadConfigFile("tinker");
var itemcfg := ReadConfigFile("itemdesc");
var coloredItem := 0;

program MakeTinkerItems(who, item)
    EraseObjProperty(who, "IsMeditating");
    EraseObjProperty(who, "HealTimer");
    if(!can_access(who, item))
        return;
    endif
    if(item.movable == 0)
        SendSysMessage(who, "You cannot use that.");
        return;
    endif
    SendSysMessage( who, "Select your material.");
    var trg := Target(who);
    if(!trg)
        SendSysMessage( who, "Targetting cancelled" );
        return;
    endif
    if(!can_access(who, trg))
        return;
    endif
    if (!Accessible( who, trg))
        SendSysMessage( who, "You can't reach that!" );
        return;
    endif
    if (!ReserveItem(trg))
        SendSysMessage(who,"You can't use that!");
        return;
    endif
    if(trg.movable == 0)
        SendSysMessage(who, "You cannot use that.");
        return;
    endif
    GFInitGump(0, 0);
    GFNoDispose();
    GFNoClose();
    GFPage(0);
    GFResizePic(0, 60, 2600, 500, 400);
    GFGumpPic( 20, 120, 5100);
    GFGumpPic( 28, 120, 5101);
    GFGumpPic(118, 120, 5101);
    GFGumpPic(208, 120, 5101);
    GFGumpPic(298, 120, 5101);
    GFGumpPic(370, 120, 5101);
    GFGumpPic(460, 120, 5102);
    GFGumpPic( 20, 128, 5103);
    GFGumpPic( 28, 128, 5104);
    GFGumpPic(118, 128, 5104);
    GFGumpPic(208, 128, 5104);
    GFGumpPic(298, 128, 5104);
    GFGumpPic(370, 128, 5104);
    GFGumpPic(460, 128, 5105);
    GFGumpPic( 20, 136, 5058);
    GFGumpPic(118, 136, 5058);
    GFGumpPic(232, 136, 5058);
    GFGumpPic(350, 136, 5058);
    GFGumpPic( 20, 136, 5106);
    GFGumpPic( 28, 136, 5107);
    GFGumpPic(118, 136, 5107);
    GFGumpPic(208, 136, 5107);
    GFGumpPic(298, 136, 5107);
    GFGumpPic(370, 136, 5107);
    GFGumpPic(460, 136, 5108);
    GFGumpPic( 28, 278, 5104);
    GFGumpPic(118, 278, 5104);
    GFGumpPic(208, 278, 5104);
    GFGumpPic(298, 278, 5104);
    GFGumpPic(368, 278, 5104);
    GFGumpPic( 20, 278, 5103);
    GFGumpPic(460, 278, 5105);
    GFGumpPic( 20, 226, 5058);
    GFGumpPic(118, 226, 5058);
    GFGumpPic(232, 226, 5058);
    GFGumpPic(350, 226, 5058);
    GFGumpPic( 20, 366, 5106);
    GFGumpPic( 28, 366, 5107);
    GFGumpPic(118, 366, 5107);
    GFGumpPic(208, 366, 5107);
    GFGumpPic(298, 366, 5107);
    GFGumpPic(370, 366, 5107);
    GFGumpPic(460, 366, 5108);
    GFGumpPic( 20, 350, 5100);
    GFGumpPic( 28, 350, 5101);
    GFGumpPic(118, 350, 5101);
    GFGumpPic(208, 350, 5101);
    GFGumpPic(298, 350, 5101);
    GFGumpPic(370, 350, 5101);
    GFGumpPic(460, 350, 5102);
    GFTextLine( 90, 380, 900, "Make Last");
    GFTextLine(300, 420, 900, "How Many?");
    GFGumpPic(390, 417, 2443);
    var sa := GetObjProperty(who, "#TinkerAmt");
    if(!sa)
        sa := 1;
    endif
    var ct := GFTextEntry(400, 420, 100, 30, 0, sa);
    var lastitm := GFButtonID( 70, 384,   3, 4, 99);
    var close   := GFButtonID(410, 380, 242, 241, 1);
    if((trg.graphic == 0x1bd7) || (trg.graphic == 0x1bdd))
        GFTextLine(110,  80, 900, "WOOD SELECTION MENU");
        var num := 2;
        var skill := (AP_GetSkill(who, TINKERING) + 20);
        var list := {0x1030, 0x102c, 0x1032, 0x104d, 0x105b};
        GFList(skill, trg, list);
    elseif(trg.objtype >= 0x2ee1a)
        GFTextLine(110,  80, 900, "GLASS SELECTION MENU");
        var num := 2;
        var skill := (AP_GetSkill(who, TINKERING) + 20);
        var list := {0xf0e};
        GFList(skill, trg, list);
    elseif((trg.objtype >= 0x1629F) and (trg.objtype <= 0x1632B))
        GFTextLine(110,  80, 900, "TINKERING SELECTION MENU");
        GFTextLine( 30, 121,   0, "Traps");
        GFTextLine(150, 121,   0, "Tools");
        GFTextLine(260, 121,   0, "Parts");
        GFTextLine(370, 121,   0, "Utensils");
        GFTextLine( 30, 351,   0, "Jewelry");
        GFTextLine(160, 351,   0, "Miscellaneous");
        GFTextLine(335, 351,   0, "More Parts");
        //  GFTextLine(320, 380, 900, "Repair Item");
        //  var repair  := GFButtonID(300, 384,   3, 4, 97);
        GFButtonPage(110, 123, 5209, 5209, 2);
        GFButtonPage(230, 123, 5209, 5209, 3);
        GFButtonPage(340, 123, 5209, 5209, 4);
        GFButtonPage(435, 123, 5209, 5209, 5);
        GFButtonPage( 90, 353, 5209, 5209, 6);
        GFButtonPage(260, 353, 5209, 5209, 7);
        GFButtonPage(430, 353, 5209, 5209, 8);
        ComposeSubMenu(who, trg);
    elseif((trg.objtype >= 0x2ee1a))
        GFTextLine(110,  80, 900, "TINKERING SELECTION MENU TEST");
        GFTextLine( 30, 121,   0, "Traps");
        GFTextLine(150, 121,   0, "Tools");
        GFTextLine(260, 121,   0, "Parts");
        GFTextLine(370, 121,   0, "Utensils");
        GFTextLine( 30, 351,   0, "Jewelry");
        GFTextLine(160, 351,   0, "Miscellaneous");
        GFTextLine(335, 351,   0, "More Parts");
        //  GFTextLine(320, 380, 900, "Repair Item");
        //  var repair  := GFButtonID(300, 384,   3, 4, 97);
        GFButtonPage(110, 123, 5209, 5209, 2);
        GFButtonPage(230, 123, 5209, 5209, 3);
        GFButtonPage(340, 123, 5209, 5209, 4);
        GFButtonPage(435, 123, 5209, 5209, 5);
        GFButtonPage( 90, 353, 5209, 5209, 6);
        GFButtonPage(260, 353, 5209, 5209, 7);
        GFButtonPage(430, 353, 5209, 5209, 8);
    ComposeSubMenu(who, trg);
        elseif((trg.objtype >= 0x2ee19))
        GFTextLine(110,  80, 900, "CLAY SELECTION MENU ");
        GFTextLine( 30, 121,   0, "Foci");
        GFTextLine(150, 121,   0, "Statues");
        GFTextLine(260, 121,   0, "Miscellaneous");
        //  GFTextLine(320, 380, 900, "Repair Item");
        //  var repair  := GFButtonID(300, 384,   3, 4, 97);
        GFButtonPage(110, 123, 5209, 5209, 2);
        GFButtonPage(230, 123, 5209, 5209, 3);
        GFButtonPage(340, 123, 5209, 5209, 4);

        ClaySubMenu(who, trg);
    else
        SendSysMessage(who, "You cannot make anything out of that.");
        return;
    endif
    var res := GFSendGump(who);
    var split := SplitWords(res[ct.keyid]);
    ct := split[2];
    SetObjProperty(who, "#TinkerAmt", Cint(ct));
    if((res[0] == 999) || (res[0] == 0) || (res[0] == close.keyid))
        SendSysMessage(who, "Cancelled");
        return;
    endif
    var objtype := CInt(res[0]);
    var jarray := { 4234, 4233, 4239, 4231, 4232, 4230};
    var tarray := { 4402, 4414, 4345};
    var lstitm := GetObjProperty(who, "LastTinkerItem");


    if(res[lastitm.keyid])
        if(lstitm in jarray)
            make_jewelry(who, item, trg, lstitm, ct);
        elseif(lstitm in tarray)
            make_trap(who, item, lstitm, trg, ct);
        else
            make_something(who, item, lstitm, trg, ct);
        endif
    elseif((objtype == 0x10f9) || (objtype == 0x113e) || (objtype == 0x1132))
        make_trap(who, item, objtype, trg, ct);
    elseif(objtype in jarray)
        make_jewelry(who, item, trg, objtype, ct);
    else
        make_something(who, item, objtype, trg, ct);
    endif
endprogram

function GFButtonIDC(x, y, release, press, close, retval)
    var line := "button " + CStr(gfref.x + Cint(x)) + " " + CStr(gfref.y + Cint(y));
    line := line + " " + CStr(Cint(release)) + " " + CStr(Cint(press)) + " ";
    line := line + "1 0 ";
    line := line + CStr(retval);
    gflayout.append( line );
endfunction

function ComposeSubMenu(who, resource)
    var num := 2;
    var skill := (AP_GetSkill(who, TINKERING) + 20);
    var color := 0;
    var colored := 0;
    var list := {};
    while(num < 9)
        case(num)
            2: GFPage(2); // Page 2 traps
                list := {0x1132, 0x113e, 0x10f9};
                GFList(skill, resource, list);

                  /*
                  if(skill >= Cint(tinker_cfg[4345]."skill"))
                    color := 900;
                    GFButtonIDC(400, 220, 210, 211, 1, 4345);
                  endif
                  GFTextLine(330, 180, color, "Explosion Trap");
                  GFTilePic(340, 120, 14093);
                  color := 0;*/
            3: GFPage(3);        // Page 3
                list := {0x10e5, 0x0fbb, 0x0f39, 0x102a, 0x13e3, 0x0fb4, 0x10e6, 0x0e85, 0x14FB};
                GFList(skill, resource, list);

            4: GFPage(4);        // Page 4
                list := {0x1053, 0x104f, 0x1004, 0x105d, 0x1059, 0x10e1, 0x1055};
                GFList(skill, resource, list);

            5: GFPage(5);        //Page 5
                list := {0x13f6, 0x9f8, 0x9f9, 0x09d7, 0x0ec4, 0x9f4, 0x9f5, 0x99a, 0x0ec2, 0x9f6, 0x9f7, 0x0995};
                GFList(skill, resource, list, 4);

            6: GFPage(6);        //Page 6
                list := {0x108a, 0x1089, 0x1085, 0x1087, 0x1088, 0x1086};
                GFList(skill, resource, list, 4);

            7: GFPage(7);        //Page 7
                list := {0x1011, 0x0a27, 0x1851, 0x1010, 0x1047, 0x14f5, 0x0a25, 0x1849};
                GFList(skill, resource, list);

            8: GFPage(8);        //Page 8
                list := {0x0f9e, 0x0e9b, 0x10e7, 0x1eb9, 0x0f43, 0x10e4, 0x0f9d, 0x1034, 0x1028};
                GFList(skill, resource, list);

        endcase
        num := num + 1;
    endwhile
    return;
endfunction


function ClaySubMenu(who, resource)
    var num := 2;
    var skill := (AP_GetSkill(who, TINKERING) + 20);
    var list := {};
    while(num < 4)
        case(num)

            2: GFPage(2); //foci
                list := {0x181D, 0x181E, 0x181F, 0x1821, 0x1822, 0x1823, 0x1824, 0x1825, 0x1826, 0x1827, 0x1828, 0x1f14};
                GFList(skill, resource, list);
            3: GFPage(3); //statues
                list := {0x1f2a, 0x1224, 0x1225,0x1226,0x1227,0x1228, 0x12cb, 0xed8};
                GFList(skill, resource, list);
            4: GFPage(4); //misc
                list := {0x995, 0xB46, 0xB48};
                GFList(skill, resource, list);
        endcase
        num := num + 1;
    endwhile
    return;
endfunction

function GFList(skill, resource, list, row := 3)
    var y:= 135;
    var x:= 20;
    var color := 0;
    var colored := 0;
    var counter := 0;
    foreach item in list
        if(counter % row == 0)
            y += 20;
            x := 25;
            if(row == 4)
                x := 15;
            endif
        endif

        if(skill >= Cint(tinker_cfg[item]."skill"))
            color := 900;
            GFButtonIDC(x + 45, y, 210, 211, 1, item);
        endif
        GFTextLine(x+45, y + 20, color, tinker_cfg[item].name);
        if(CInt(tinker_cfg[item].colored))
            colored := resource.color;
        endif

        var tile := item;
        if(CInt(tinker_cfg[item].tileView))
            tile := CInt(tinker_cfg[item].tileView);
        endif
        GFTilePic(x, y, tile, colored);
        color := 0;


        counter+=1;

        if(row == 3)
            if(counter % row == 0)
                y += 40;
            endif
            x += 150;
        else
            if(counter % row == 0)
                y += 50;
            endif
            x += 115;
        endif

    endforeach

endfunction


function make_something( who, item, what, use_on, ct)
    ct := Cint(ct);
    SetObjProperty(who, "LastTinkerItem", what);
    var type      := tinker_cfg[what].type;
    var material  := CInt(tinker_cfg[what].material);
    var skill     := CInt(tinker_cfg[what].skill);
    var colored     := CInt(tinker_cfg[what].colored);
    var itemname  := tinker_cfg[what].Name;
    var thepoints := CInt(skill * 2);
    var exchk     := tinker_cfg[what].exchk;
    var myskill := CInt(AP_GetSkill(who, TINKERING));
    var counter := 0;
    var x := who.x;
    var y := who.y;
    var theitem, lockid, thekey;
    while(counter < ct)
        if((who.x != x) || (who.y != y))
            SendSysMessage(who, "You stop Tinkering.");
            break;
        endif
        if(!item)
            break;
        endif
        if((use_on.amount < material) or (!resourcecheck(who, use_on, type)))
            SendSysMessage(who, "You don't have enough material to make this!");
            break;
        endif
        PlaySoundEffect(who, 0x22d);
        PerformAction(who, 0x021);
        sleep(2);
        PlaySoundEffect(who, 0x22d);
        PerformAction(who, 0x021);
        sleep(2);
        PlaySoundEffect(who, 0x22d);
        PerformAction(who, 0x021);
        sleep(2);
        if(SkillCheck(who, TINKERING, skill, thepoints))
            if(!SubtractAmount(use_on, material))
                sendsysmessage(who, "Cancelled.");
                break;
            endif
            theitem := CreateItemInContainer(who.backpack, CInt(what), 1);
            CheckToolWear (who, item, TINKERING);
            theitem.movable := 1;
            if(colored)
                theitem.color := use_on.color;
            endif
            var modpts := 0;
            if(myskill >=  skill)
                modpts := (myskill - skill);
            endif
            var rint := RandomInt(100);
            var premium := who.IsPremium();
            modpts := 10;
            case(premium)
                1: modpts := add_percent(modpts, 5);
                2: modpts := add_percent(modpts, 10);
                3: modpts := add_percent(modpts, 15);
            endcase
            if(modpts >= rint)
                ExceptionalFameMod(who, myskill, skill, thepoints);
                if(exchk)
                    theitem.quality := 1.2;
                    theitem.hp := theitem.maxhp;
                    if(AP_GetSkill(who, TINKERING) >= 99)
                        SetName(theitem, "an exceptional " + itemname + " [crafted by " + who.name + "]");
                    else
                        SetName(theitem, "an exceptional " + itemname);
                    endif
                    SendSysMessage(who, "You make an exceptional item and put it in your pack");
                endif
            else
                var fq :=  RandomInt(myskill);
                if(skill > 20)
                    skill := skill - 20;
                else
                    skill := 3;
                endif
                if((myskill < skill) and (exchk))
                    SendSysMessage( who, "You create the item, but it's quality is below average." );
                    var val := RandomInt(2) + 1;
                    case(val)
                        1: theitem.quality := 0.7;
                        2: theitem.quality := 0.8;
                        3: theitem.quality := 0.9;
                    endcase
                    theitem.hp := theitem.maxhp;
                else
                    SendSysMessage( who, "You create the item and place it in your pack." );
                endif
                SetName(theitem, itemname );
            endif
            if((theitem.graphic in array(0x9a8, 0x9a9, 0x9aa, 0x9ab, 0xa2c, 0xa30, 0xa34, 0xa38, 0xa4d, 0xa4f,
                0xa51, 0xa53, 0xe3c, 0xe3d, 0xe3e, 0xe3f, 0xe40, 0xe41, 0xe42, 0xe43, 0xe7c, 0xe7d, 0xe7e, 0xe80)))
                if(RandomInt(AP_GetSkill(who, TINKERING)) > 40)
                    SetObjProperty(theitem, "lockable", "1");
                    lockid := AllocateLockID();
                    theitem.locked := 0;
                    thekey := CreateItemInBackpack(who, UOBJ_COPPER_KEY, 1);
                    SetObjProperty(thekey, "lockid", lockid);
                    SetObjProperty(theitem,"lockid", lockid);
                    SetObjProperty(theitem,"LockPickDiff", (AP_GetSkill(who, TINKERING) + 10));
                    SendSysMessage(who, "You will find the key in your backpack.");
                endif
            endif
        else
            SubtractAmount(use_on, CInt(material/2));
            SendSysMessage(who, "You destroy some material.");
        endif
        counter := counter + 1;
    endwhile
endfunction

function make_jewelry(who, item, stuff, what, ct)
    ct := Cint(ct);
    SetObjProperty(who, "LastTinkerItem", what);
    var type      := tinker_cfg[what].type;
    var material  := tinker_cfg[what].material;
    var skill     := tinker_cfg[what].skill;
    var itemname  := tinker_cfg[what].Name;
    var thepoints := CInt(skill * 2);
    var counter := 0;
    var x := who.x;
    var y := who.y;
    var theitem;
    SendSysMessage(who, "Select the gems you wish to work with");
    var thegem := Target(who);
    if(!thegem)
        SendSysMessage(who, "Targetting cancelled.");
        return;
    endif
    if(!can_access(who, thegem))
        return;
    endif
    if((thegem.objtype >= 0x0f0f) && (thegem.objtype <= 0x0f30))
        if(!ReserveItem(thegem))
            SendSysMessage(who,"that gem is not accessible");
            return;
        endif
    else
        SendSysMessage(who, "That is not a gem!");
        return;
    endif
    if(!Accessible(who, thegem))
        SendSysMessage(who, "You can't reach that!");
        return;
    endif
    var myskill := CInt(AP_GetSkill(who, TINKERING));
    while(counter < ct)
        if((who.x != x) || (who.y != y))
            SendSysMessage(who, "You stop Tinkering.");
            break;
        endif
        if(stuff.amount < material)
            SendSysMessage(who, "You don't have enough material to make this!");
            break;
        endif
        PlaySoundEffect(who, 0x22d);
        PerformAction(who, 0x021);
        sleep(2);
        PlaySoundEffect(who, 0x22d);
        PerformAction(who, 0x021);
        sleep(2);
        PlaySoundEffect(who, 0x22d);
        PerformAction(who, 0x021);
        sleep(2);
        if(stuff.amount > material)
            if(!SubtractAmount(thegem, 1))
                break;
            endif
            if(SkillCheck(who, TINKERING, skill, thepoints))
                if(!SubtractAmount(stuff, material))
                    break;
                endif
                theitem := CreateItemInBackpack(who, CInt(what), 1);
                CheckToolWear (who, item, TINKERING);
                var modpts := 0;
                if(myskill >=  skill)
                    modpts := (myskill - skill);
                endif
                var rint := RandomInt(100);
                if(modpts >= rint)
                    ExceptionalFameMod(who, myskill, skill, thepoints);
                    SetName(theitem, itemname);
                    SendSysMessage(who, "You create the item and place it in your pack.");
                endif
            else
                SubtractAmount(stuff, CInt(material/2) );
                SendSysMessage(who, "You destroy some material.");
            endif
        else
            SendSysMessage(who, "You don't have enough material!");
        endif
        counter := counter + 1;
    endwhile
endfunction

function make_trap(who, item, traptype, ingot, ct)
    if(!resourcecheck(who, ingot, "metal"))
        return;
    endif
    ct := Cint(ct);
    case(traptype)
        4345:
            SetObjProperty(who, "LastTinkerItem", 4345);
            explosion_trap(who, item, ingot, ct);
        4414:
            SetObjProperty(who, "LastTinkerItem", 4414);
            poison_trap(who, item, ingot, ct);
        4402:
            SetObjProperty(who, "LastTinkerItem", 4402);
            dart_trap(who, item, ingot, ct);
    endcase
endfunction

function dart_trap(who, item, ingot, ct)
  var counter := 0;
  var x := who.x;
  var y := who.y;
  var theitem;
  while(counter < 1)
    SendSysMessage(who,"select the container you wish to place a trap on");
    var chest := Target(who);
    if(!chest)
      SendSysMessage(who,"canceled");
      break;
    endif
    if(!can_access(who, chest))
      break;
    endif
    if(!Accessible(who, chest))
      SendSysMessage(who, "You can't reach that!");
      break;
    endif
    if(!ReserveItem(chest))
      SendSysMessage(who,"you cant trap that");
      break;
    endif
    if(!chest.IsContainer())
      SendSysMessage(who, "You can only trap boxes.");
      return;
    endif
    if(GetObjProperty(chest, "trap_type"))
      SendSysMessage(who, "That chest is already trapped.");
      break;
    endif
    var resource_check := 0;
    foreach item in EnumerateItemsInContainer(who.backpack)
      if(item.graphic == 0x1bfb)
        if(ReserveItem(item))
          SubtractAmount(item, 1);
          resource_check := 1;
          break;
        endif
      endif
    endforeach
    if(resource_check == 0)
      SendSysMessage(who,"you dont have any bolts.");
      break;
    endif
    if(!SubtractAmount(ingot, 1))
      break;
    endif
    var myskill := AP_GetSkill(who, TINKERING);
    sleep(2);
    if(SkillCheck(who, TINKERING, -1, Cint(myskill / 2)))
      var modpts := 10;
      var rint := RandomInt(100);
      if(modpts >= rint)
        ExceptionalFameMod(who, myskill, myskill, Cint(myskill / 2));
        //SetObjProperty(chest, "trap_strength", Cint((myskill / 3) + 10));
      else
        //SetObjProperty(chest, "trap_strength", Cint(myskill / 3));
      endif
     // SetObjProperty(chest, "trap_type", "1");
      //SetObjProperty(chest, "oldscript", chest.usescript);
      SendSysMessage(who, "You carefully place the trap on the container");
      //chest.usescript := ":tinkering:tinkerTraps";

      		if( chest.IsA(POLCLASS_CONTAINER) )
      			AddTrap( chest, "Dart", Cint((myskill / 3)), 1 );
            endif

      SetObjProperty(chest, "trapper", who.serial);
      CheckToolWear (who, item, TINKERING);
    else
      var results := RandomInt(9) + 1;
      if(results == 1)
        var the_damage := (RandomInt(19) + 1) + RandomInt(myskill + 10);
        SendSysMessage(who, "You fail and set off the trap!", 1, 33);
        PlaySoundEffect(who, SFX_225);
        ApplyDamageEX(who, the_damage, DMG_PHYSICAL);
      else
        SendSysMessage(who, "You failed to properly place the trap");
      endif
    endif
    counter := counter + 1;
  endwhile
endfunction

function poison_trap(who, item, ingot, ct)
    var counter := 0;
    var x := who.x;
    var y := who.y;
    var theitem, chest, resource_check, points, strngth, results, plevel, passparms;
    while(counter < 1)
        SendSysMessage(who,"select the container you wish to place a trap on");
        chest := Target(who);
        if(!chest)
            SendSysMessage(who,"canceled");
            break;
        endif
    if(!can_access(who, chest))
      break;
    endif
    if(!Accessible(who, chest))
      SendSysMessage(who, "You can't reach that!");
      break;
    endif
    if(!ReserveItem(chest))
      SendSysMessage(who,"you cant trap that");
      break;
    endif
    if(!chest.IsContainer())
      SendSysMessage(who, "You can only trap boxes.");
      return;
    endif
    if(GetObjProperty(chest, "trap_type"))
      SendSysMessage(who, "That chest is already trapped.");
      break;
    endif
    resource_check := 0;
    foreach item in EnumerateItemsInContainer(who.backpack)
      if(item.graphic == 0xf0a)
        if(ReserveItem(item))
          SubtractAmount(item, 1);
          resource_check := 1;
          break;
        endif
      endif
    endforeach
    if(resource_check == 0)
      SendSysMessage(who,"you dont have a poison potion.");
      break;
    endif
    if(!SubtractAmount(ingot, 1))
      break;
    endif
    var myskill := CInt(AP_GetSkill(who, TINKERING));
    if(myskill <= 20)
      strngth := 1;
    elseif(myskill <= 40)
      strngth := 2;
    elseif(myskill <= 60)
      strngth := 3;
    elseif(myskill <= 60)
      strngth := 4;
    else
      strngth := 5;
    endif
    if(SkillCheck(who, TINKERING, -1, myskill))
      var modpts := 10;
      var rint := RandomInt(100);
      if(modpts >= rint)
        ExceptionalFameMod(who, myskill, myskill, Cint(myskill / 2));
        if(strngth < 5)
          strngth := strngth + 1;
        else
          strngth := 5;
        endif
        //SetObjProperty(chest, "trap_strength", strngth);
      else
        //SetObjProperty(chest, "trap_strength", strngth);
      endif
      //SetObjProperty(chest, "trap_type", "2");
      //SetObjProperty(chest, "oldscript", chest.usescript);
      SendSysMessage(who, "The carefully place the trap on the container");
      //chest.usescript := ":tinkering:tinkerTraps";


      		if( chest.IsA(POLCLASS_CONTAINER) )
      			AddTrap( chest, "Gas", strngth, 1 );
            endif


      SetObjProperty(chest, "trapper", who.serial);
      CheckToolWear (who, item, TINKERING);
    else
      results := RandomInt(9) + 1;
      if (results == 1)
        SendSysMessage(who, "You fail, and poison yourself!");
        start_script(":spells:poisonDamage", {who, who, "poison trap", strngth});
        break;
      else
        SendSysMessage(who,"You fail to properly place the trap.");
      endif
    endif
    counter := counter + 1;
  endwhile
endfunction

function explosion_trap(who, item,  ingot, ct)
    var counter := 0;
    var x := who.x;
    var y := who.y;
    var chest, resource_check, results, the_damage;
    while(counter < 1)
        SendSysMessage(who,"select the container you wish to place a trap on");
        chest := Target(who);
        if (!chest)
            SendSysMessage(who,"canceled");
            return;
        endif
        if(!can_access(who, chest))
            return;
        endif
        if (!Accessible(who, chest))
            SendSysMessage(who, "You can't reach that!");
            return;
        endif
        if (!ReserveItem(chest))
            SendSysMessage(who,"you cant trap that");
            return;
        endif

        if(!chest.IsContainer())
            SendSysMessage(who, "You can only trap boxes.");
            return;
        endif
        if(GetObjProperty(chest, "trap_type"))
            SendSysMessage(who, "That chest is already trapped.");
            return;
        endif
        resource_check := 0;
        foreach item in EnumerateItemsInContainer(who.backpack)
            if (item.graphic == 0xf0d)
                if (ReserveItem(item))
                    SubtractAmount(item, 1);
                    resource_check := 1;
                    break;
                endif
            endif
        endforeach
        if (resource_check == 0)
            SendSysMessage(who,"you dont have an explosion potion.");
            return;
        endif
        SubtractAmount(ingot, 1);
        var myskill := CInt(AP_GetSkill(who, TINKERING));
        if (SkillCheck( who, TINKERING, -1, myskill*2 ))
            var modpts := 10;
            var rint := RandomInt(100);
            if(modpts >= rint)
                ExceptionalFameMod(who, myskill, myskill, Cint(myskill / 2));
                //SetObjProperty(chest, "trap_strength", Cint(myskill + 20));
            else
                rint := RandomInt(100);
                if(modpts >= rint)
                    //SetObjProperty(chest, "trap_strength", Cint(myskill / 2));
                else
                    //SetObjProperty(chest, "trap_strength", Cint(myskill));
                endif
            endif
            //SetObjProperty(chest, "trap_type", "3");
            //SetObjProperty(chest, "oldscript", chest.usescript);
            SendSysMessage(who, "The carefully place the trap on the container");
            //chest.usescript := ":tinkering:tinkerTraps";


      		if( chest.IsA(POLCLASS_CONTAINER) )
      			AddTrap( chest, "Explosion", Cint(myskill / 2), 1 );
            endif


            SetObjProperty(chest, "trapper", who.serial);
            CheckToolWear (who, item, TINKERING);
        else
            results := RandomInt(9) + 1;
            if (results == 1)
                the_damage := (RandomInt(19) + 1) + RandomInt(myskill + 10);
                SendSysMessage(who, "You fail, and set off the explosion!");
                PlayObjectCenteredEffect( who,  0x36b0,5,0 );
                PlaySoundEffect( who, 0x0208);
                ApplyDamageEX(who, the_damage, DMG_PHYSICAL);
            else
                SendSysMessage(who, "You failed to properly place the trap");
            endif
        endif
        counter := counter + 1;
    endwhile
endfunction

function resourcecheck(who, use_on, type)
    var the_type;
    case(use_on.objtype)
        0x1bd7: the_type := "wood";
        0x1bdd: the_type := "wood";

        0x26300: the_type := "wood";
        0x26301: the_type := "wood";
        0x26302: the_type := "wood";
        0x26303: the_type := "wood";
        0x26304: the_type := "wood";
        0x26305: the_type := "wood";
        0x26306: the_type := "wood";
        0x26307: the_type := "wood";
        0x26308: the_type := "wood";
        0x26309: the_type := "wood";
        0x2630A: the_type := "wood";
        0x2630B: the_type := "wood";
        0x2630C: the_type := "wood";
        0x2630D: the_type := "wood";
        0x2630E: the_type := "wood";
        0x2630F: the_type := "wood";

        0x1629F: the_type := "metal";
        0x1630A: the_type := "metal";
        0x1630B: the_type := "metal";
        0x1630C: the_type := "metal";
        0x1630D: the_type := "metal";
        0x1630E: the_type := "metal";
        0x1630F: the_type := "metal";
        0x1631A: the_type := "metal";
        0x1631B: the_type := "metal";
        0x1631C: the_type := "metal";
        0x1631D: the_type := "metal";
        0x1631E: the_type := "metal";
        0x1631F: the_type := "metal";
        0x1632A: the_type := "metal";
        0x1632B: the_type := "metal";
    endcase
    if(the_type == type)
        return 1;
    else
        if(type == "wood")
            SendSysMessage(who, "You cannot make wooden items out of metal.");
        elseif(type == "metal")
            SendSysMessage(who, "You cannot make metal items out of wood.");
        endif
        return 0;
    endif
endfunction

function ExceptionalFameMod(who, skill, diff, points)
    if(skill > diff - 20)
        diff := diff + 20;
        if((skill - diff) <= 5)
            points := points;
        elseif((skill - diff) <= 10)
            points := (points * 3) / 4;
        elseif((skill - diff) <= 15)
            points := points / 2;
        elseif((skill - diff) <= 20)
            points := points / 4;
        else
            points := 0;
        endif
        points := Cint(points);
        var fame := Cint(GetObjProperty(who, "Fame"));
        var famegain := fame + points;
        SetObjProperty(who, "Fame", famegain);
        var msgtext := "You have ";
        if(points < 0)
            msgtext := msgtext + "lost ";
            points := Abs(points);
        else
            msgtext := msgtext + "gained ";
        endif
        if(points > 150)
            msgtext := msgtext + "a great amount of ";
        elseif(points > 125)
            msgtext := msgtext + "alot of ";
        elseif(points > 75)
            msgtext := msgtext + "a good amount of ";
        elseif(points > 30)
            msgtext := msgtext + "some ";
        elseif(points > 0)
            msgtext := msgtext + "a little ";
        else
            return 0;
        endif
        msgtext := msgtext + "Fame.";
        SendSysMessage(who, msgtext);
        var karma := Cint(GetObjProperty(who, "Karma"));
        var kmod := GetKarmaLevel(karma);
        var fmod := GetFameLevel(famegain);
        var newtitle := nototitles[ (kmod) ];
        newtitle := "The " + CStr(newtitle[fmod]) + " ";
        if(newtitle["None"])
            newtitle := "";
        endif
        if(fmod == 5)
            if(who.gender == 1)
                newtitle := newtitle + "Lady ";
            else
                newtitle := newtitle + "Lord ";
            endif
        endif
        if(newtitle != who.title_prefix)
            who.title_prefix := newtitle;
            SendSysMessage(who, "you are now known as " + newtitle + who.name);
        endif
        SetNotoTitle(who, karma, fame);
    endif
endfunction
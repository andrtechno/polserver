use uo;
use basic;
use os;

include "include/client";
include ":attributes:attributes";
include ":timedScripts:timedScripts";
include "include/direction";

program track(who)
    EraseObjProperty(who, "IsMeditating");
    EraseObjProperty(who, "HealTimer");
    UnloadConfigFile(":tracking:tracking");
    var classlevel := CInt(GetObjProperty(who,"classlevel"));

    //  if(SkillCheck( who, TRACKING, -1, (AP_GetSkill(who, TRACKING) + 30) ) > 0)
    if(SkillCheck( who, TRACKING, -1, (AP_GetSkill(who, TRACKING)) ) > 0)

        var tracker := ReadGameClock();
        SetObjProperty(who, "TrackingCounter", tracker);
        var range := CInt((AP_GetSkill(who, TRACKING)/8))*classlevel;
        SendSysMessage(who, "range: "+range);
        var nearby := ListMobilesNearLocation(who.x,who.y, LIST_IGNORE_Z, range, who.realm);
        if(len(nearby) == 1)
            SendSysMessage(who, "There don't seem to be any creatures nearby");
            return;
        endif

        //New functional
        if(GetObjProperty(who, "LastMyAttackOpponent"))
            var critter := SystemFindObjectBySerial( CInt(GetObjProperty(who, "LastMyAttackOpponent")) );
            if(critter)

                if((Distance(who, critter) <= range) && (critter.dead == 0))
                    var dir := Get_direction(who, critter);
                    if(dir == "nearby")
                        SendSysMessage(who, critter.name + " is " + dir);
                    else
                        SendSysMessage(who, critter.name + " is to the " + dir);
                    endif
                    sleep(5);
                endif

                TS_StartTimer(who, "TrackingArrow", 10, "TrackingArrow", critter);
            endif
            return 1;
        endif


        var track_list := CreateMenu("Select a category.");
        var track_menu := CreateMenu("Select a creature.");
        var critter_ids := array;
        var menucount := 0;
        var config := ReadConfigFile("tracking");
        //var typearray := {};
        var animal, creature, person, tiletype;
        foreach mobile in nearby
            if((mobile != who) && (!mobile.dead))
                var elem := FindConfigElem(config, mobile.graphic);
                if(elem)
                    tiletype := GetConfigString(elem, "type");
                    case(tiletype)
                        "Animal"  : animal   := 1;
                        "Monster" : creature := 1;
                        "Person"  : person   := 1;
                    endcase
                endif
            endif
        endforeach
        if(animal == 1)
            AddMenuItem(track_list, 0x20cf, "Animals");
        endif
        if(creature == 1)
            AddMenuItem(track_list, 0x20d9, "Creatures");
        endif
        if(person == 1)
            AddMenuItem(track_list, 0x2106, "People");
        endif
        AddMenuItem(track_list, 0x2107, "Player");
        var thetarget := SelectMenuItem2(who, track_list);
        var listtype := {};

        case(thetarget.objtype)
            8454: listtype := "Person";
            8399: listtype := "Animal";
            8409: listtype := "Monster";
            8455: listtype := "Player";
        endcase

        var ttype;
        foreach mobile in nearby
            if((mobile != who) && (!mobile.dead))

                if(mobile.isa(POLCLASS_NPC))
                var elem := FindConfigElem(config, mobile.graphic);
                if(elem)
                    ttype := GetConfigString(elem, "type");
                    if(ttype == listtype)
                        menucount := menucount + 1;
                        critter_ids[menucount] := mobile;
                        tiletype := GetConfigInt(elem, "tile");
                        AddMenuItem(track_menu, tiletype, mobile.name);
                    endif
                endif
                else

                    if(mobile.graphic == 0x190)
                        tiletype:=0x2106;
                    else
                        tiletype:=0x2107;
                    endif
                    menucount := menucount + 1;
                    critter_ids[menucount] := mobile;
                    AddMenuItem(track_menu, tiletype, mobile.name);

                endif
            endif
        endforeach
        if(menucount > 0)
            thetarget := SelectMenuItem2(who, track_menu);
            if(!thetarget)
                SendSysMessage(who, "Targetting cancelled.");
                return;
            endif
            var critter := critter_ids[thetarget.index];
            SetObjProperty( who, "#trackingtimeout", ReadGameClock()+40 );

            //Detach();
            var script := Start_Script(":tracking:timer", {who, critter, range, tracker});

        endif
    else
        SendSysMessage(who, "You fail to find any creatures nearby");
    endif
endprogram

use uo;
use cliloc;

include ":attributes:attributes";
include ":magery:spells";
include ":damage:damage";

program mana_drain ( parms )
    var caster := parms[1];
    var info := parms[2];
    var cast_on;
    cast_on := MS_Target(caster, info, "Select a target.", TGTOPT_CHECK_LOS+TGTOPT_HARMFUL);
    if (!cast_on) // If no cast_on then get cast_on from parms[4]. Used mostly for NPC casting.
        cast_on := parms[4];
    endif
    if (!cast_on)
        return 0;
    endif
    if ( !MS_MobileCheck(caster, cast_on) )
        return 0;
    endif
    if (!CheckCastSpot(caster, info))
        return 0;
    endif

	if ( caster.serial == cast_on.serial )
		SendSysMessageCL(caster, 502649, color := MESSAGE_COLOR_BAD); // You cannot cast that on yourself.
		return 0;
	endif

    if (GetObjProperty(cast_on, "MerchantType"))
        SendSysMessage(caster, "This is merchant", color := MESSAGE_COLOR_BAD);
        return 0;
    endif

	// Mana drained = caster's eval - target's resist
	var mana_drained := AP_GetSkill(caster, EVALUATING_INTELLIGENCE) - AP_GetSkill(cast_on, RESISTING_SPELLS);
	var cast_on_mana := AP_GetVital(cast_on, MANA);

	// Can not drain more mana than the target has
	if ( mana_drained > cast_on_mana )
		mana_drained := cast_on_mana;
	endif

	AP_ConsumeVital(cast_on, MANA, mana_drained);

	// Can not go above vital cap on caster
	var caster_mana := AP_GetVital(caster, MANA);
	var max_mana := AP_GetVitalMaximumValue(caster, MANA);

	if ( mana_drained + caster_mana > max_mana )
		mana_drained := max_mana - caster_mana;
	endif

	// Make sure we don't negatively drain mana.. just in case.
	if ( mana_drained < 0 )
		mana_drained := 0;
	endif

	AP_SetVital(caster, MANA, caster_mana + mana_drained);

	MS_PlaySpellSFX(info.spell_id, cast_on);
	MS_PlaySpellGFX(info.spell_id, cast_on, caster);	
	// Set LastDamage info.
	SetLastDamageInfo(cast_on, mana_drained, DMG_ENERGY, caster);

	return 1;
endprogram
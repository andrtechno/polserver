use os;
use uo;

include ":attributes:attributes";
include ":magery:spells";
include "include/client";
include "include/sounds";
include ":damage:damage";

program cast_mind_blast( parms )
    var caster := parms[1];
    var info := parms[2];
    var cast_on;
    cast_on := MS_Target(caster, info.targ, "Select a target.", TGTOPT_CHECK_LOS+TGTOPT_HARMFUL);
    if (!cast_on) // If no cast_on then get cast_on from parms[4]. Used mostly for NPC casting.
        cast_on := parms[4];
    endif
    if (!cast_on)
        SendSysMessage (caster, "Cancelled.", color := 33);
        return 0;
    endif
    if ( !MS_MobileCheck(caster, cast_on) )
        return 0;
    endif
    
  SetObjProperty(cast_on, "LastHit", {caster.name,caster.serial, "mind blast" });
  PlaySoundEffect(cast_on, SFX_SPELL_MIND_BLAST);
  PlayObjectCenteredEffect(cast_on, FX_CURSE_EFFECT, 7,0x10);
	// Base damage is a decimal number in between min and max damage
	var min_damage := CInt(GetConfigInt(info.spell_config, "MinBaseDamage"));
	var max_damage := CInt(GetConfigInt(info.spell_config, "MaxBaseDamage"));
	var base_damage := min_damage + (CDbl(RandomInt(CInt((max_damage - min_damage) * 10)) + 1) / 10);

	// damage: Base Damage + ((Magery + Intelligence) / 5) (Drop decimals from result)
	var damage := base_damage + CInt((AP_GetSkill(caster, MAGERY) + AP_GetStat(caster, ATTRIBUTEID_INTELLIGENCE)) / 5);
        if(Reflected(cast_on))
            SendSysMessage (caster, "The spell was reflected back onto you!!!", color := 33);
            cast_on := caster;
        endif
	ApplyRawSpellDamageEX(cast_on, damage, info.damage_type, caster, info.Circle);
	
	return 1;
/*
  var my_int := CInt(GetIntelligence(caster));
  var his_int := CInt(GetIntelligence(cast_on));
  var modif := my_int - his_int;
  if(his_int > my_int)
    modif := his_int - my_int;
	cast_on := caster;
  elseif(his_int == my_int)
	return;
  endif
  if(modif > 20)
    modif:= 20;
  endif
  if(Reflected(cast_on))
	cast_on := caster;
  endif
  var dmg := RandomDiceRoll("3d7");
  var diff := Resisted(info.circle, caster, cast_on, dmg);
  if(cast_on.isA(POLCLASS_NPC))
    diff := diff * 2;
  endif
  ApplyRawDamage(cast_on, diff); */
endprogram

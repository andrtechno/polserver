use os;
use uo;
use util;
use cliloc;

include ":magery:spells";
include ":magery:fields";
include ":attributes:attributes";
include ":virtue:noto";

program poisonfield( parms )
  var caster := parms[1];
  var info := parms[2];
  var cast_on := MS_TargetCoordinates(caster, info, "Select a target.");
    if (!cast_on) // If no cast_on then get cast_on from parms[4]. Used mostly for NPC casting.
        cast_on := parms[4];
    endif
    if (!cast_on)
        return 0;
    endif
    if ( !CheckLosAt(caster, cast_on.x, cast_on.y, cast_on.z) )
        SendSysMessageCL(caster, 500979, color := 33); // You cannot see that location.
        return 0;
    endif
    if (!CheckCastSpot(caster, info))
        return 0;
    endif
	var objtype;
	var direction := GetDirectionByFacing(caster);
	case ( direction )
		FIELD_SHAPE_HORIZONTAL: objtype := "PoisonFieldEW"; break;
		FIELD_SHAPE_VERTICAL: objtype := "PoisonFieldNS"; break;
	endcase

	// Level is the same as Poison spell
	var poison_level := MS_GetPoisonLevel(caster, cast_on);
	var area_size := GetConfigInt(info.spell_config, "AreaSize");

	var coordinates := GetCoordinatesForField(cast_on.x, cast_on.y, direction, CInt(area_size/2));
	foreach coord in ( coordinates )
		var cast_on_z := cast_on.z;
		/*var standing_z := struct;
		standing_z := GetStandingHeight(coord.x, coord.y, cast_on.z, caster.realm);
		if ( cast_on_z < standing_z )
			cast_on_z := GetStandingHeight(coord.x, coord.y, cast_on.z, caster.realm);
		endif

		if ( CheckLosAt(caster, coord.x, coord.y, cast_on_z ) )
			continue; // Only create a field piece if the caster has line of sight.
		endif*/
		var item := CreateItemAtLocation(coord.x, coord.y, cast_on.z, objtype, 1, caster.realm);
		if ( item.errortext )
			SendSysMessage(caster, "Error - "+item.errortext);
			continue;
		endif

		SetObjProperty(item, "SummonedField", caster.serial);
		SetObjProperty(item, "Poisonlevel", poison_level);
		item.SetOwner(caster);

        var duration := 30;
        if(GetObjProperty(caster,"classid") == ID_MAGE)
            var val := (info.classlevel * 10);
            duration := duration + val;
        endif

		item.SetDuration(duration);

	endforeach
	VS_AdjustVirtue(caster, "honor", -1, 100);
	VS_AdjustVirtue(caster, "compassion", -1, 100);

	return 1;
endprogram

use vitals;
use os;
use uo;
use cfgfile;

include ":attributes:attributes";
include ":magery:spells";
include "include/client";
include "include/sounds";
include "include/spellAttack";
include ":damage:damage";

program cast_explosion( parms )
    var caster := parms[1];
    var info := parms[2];
    var cast_on;
    cast_on := MS_Target(caster, info.targ, "Select a target.", TGTOPT_CHECK_LOS+TGTOPT_HARMFUL);
    if (!cast_on) // If no cast_on then get cast_on from parms[4]. Used mostly for NPC casting.
        cast_on := info.targ;
    endif
    if (!cast_on)
        SendSysMessage (caster, "Cancelled.", color := 33);
        return 0;
    endif
    if ( !MS_MobileCheck(caster, cast_on) )
        return 0;
    endif
	// Tell spell starter to not wait for this script to finish
	var spell_starter := GetProcess(info.pid);
	spell_starter.SendEvent("continue");

	Sleep(2);
  PlaySoundEffect( cast_on, SFX_SPELL_EXPLOSION );
  PlayStationaryEffect( cast_on.x,cast_on.y,cast_on.z, FX_EXPLODE_3, 7, 0x10, 0, cast_on.realm );
  SetObjProperty(cast_on, "LastHit", ( {caster.name, caster.serial, "explosion" } ) );
        if(Reflected(cast_on))
            SendSysMessage (caster, "The spell was reflected back onto you!!!", color := 33);
            cast_on := caster;
        endif
	// Base damage is a decimal number in between min and max damage
	var min_damage := CInt(GetConfigInt(info.spell_config, "MinBaseDamage"));
	var max_damage := CInt(GetConfigInt(info.spell_config, "MaxBaseDamage"));
	var base_damage := min_damage + (CDbl(RandomInt(CInt((max_damage - min_damage) * 10)) + 1) / 10);
	var damage := MS_GetSpellDamage(caster, cast_on, base_damage);

	ApplyRawSpellDamageEX(cast_on, damage, info.damage_type, caster);
	
	return 1;
	
/*
  var dmg;
  if(Reflected(cast_on))
	cast_on := caster;
  endif
  dmg := RandomDiceRoll("7d6");
  Detach();
  sleep(2);
  send_attack(cast_on,caster, 43);
  if(GetHp(cast_on) > 1)
    if(cast_on.npctemplate)
      dmg := dmg * 2;
    endif
    ApplyRawDamage(cast_on, Resisted(info.circle,caster,cast_on,dmg));
  endif*/
endprogram

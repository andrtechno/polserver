use uo;
use os;
use util;

include ":attributes:attributes";
include ":timedScripts:timedScripts";
include ":magery:spells";
include ":damage:damage";

program cast_honorableexecution( params )
    var caster := params[1];
    var info := params[2];
    var cast_on;
    cast_on := MS_Target(caster, info, "Select a target.", TGTOPT_CHECK_LOS+TGTOPT_HARMFUL);
    if (!cast_on) // If no cast_on then get cast_on from params[4]. Used mostly for NPC casting.
        cast_on := params[4];
    endif
    if (!cast_on)
        return 0;
    endif
    if ( !MS_MobileCheck(caster, cast_on) )
        return 0;
    endif
    if (!CheckCastSpot(caster, info))
        return 0;
    endif
	MS_PlaySpellSFX(info.spell_id, cast_on);
	MS_PlaySpellGFX(info.spell_id, cast_on, caster);

    /*if(Reflected(cast_on))
		SendSysMessage (caster, "The spell was reflected back onto you!!!", color := 33);
        cast_on := caster;
    endif*/

    //if(Reflected(cast_on, caster, info))
    //    cast_on := caster;
    //endif
    cast_on := Reflected(cast_on, caster, info);

	// Dex decrease % = (Eval / 10) + 8) - (Resist / 10)
	var percent := CDbl((AP_GetSkill(caster, EVALUATING_INTELLIGENCE) / 10) + 8) - (AP_GetSkill(cast_on, RESISTING_SPELLS) / 10);
	var points := CInt(AP_GetStat(cast_on, DEXTERITY) * (percent / 100));

	// Duration: ((Eval / 5) + 1) * 6
	var duration := ((AP_GetSkill(caster, EVALUATING_INTELLIGENCE) / 5) + 1) * 6;
	duration := 5;
	TS_StartTimer(cast_on, "Clumsy", duration, points, caster);

	// Set LastDamage info.
	SetLastDamageInfo(cast_on, points, "Clumsy", caster);
endprogram

use uo;
use os;
use util;
use attributes;
use cliloc;

include "include/client";
include ":attributes:attributes";

const DESTROY_TREASURE_CHEST := 300; //5 min

program picklock(who, lockpick)
    EraseObjProperty(who, "IsMeditating");
    EraseObjProperty(who, "HealTimer");
	SendSysMessageCL( who, 502068, color := 88 ); // What do you want to pick?
	SendSysMessageCL( who, 502067, color := 44 ); // Remember!  Locked chests may also be trapped!
    //SendSysMessage(who, "Select a target.");
    var victim := Target(who);
    if(!victim)
        SendSysMessageCL( who, 1042023, color := MESSAGE_COLOR_BAD ); // Cancelled.
        return;
    endif
    if(Distance(victim, who) > 1)
        SendSysMessageCL( who, 502070, color := MESSAGE_COLOR_BAD ); // I am too far away to do that.
        return;
    endif
    if(!victim.locked)
        SendSysMessageCL( who, 502069, color := 44 ); // This does not appear to be locked.
        return;
    endif
    if( victim.IsSecured() )
		SendSysMessageCL( who, 502071, color := 44 ); // That is secure
		return;
	endif
    if(GetObjProperty(victim,"level"))
        PickTreasureChest(who, lockpick, victim);
        return;
    else
        var diffi := CInt(GetObjProperty(victim,"MLockPickDiff"));
        if(diffi)
            PickMLockedItem(who, lockpick, victim, diffi);
            return;
        else
            var diff := CInt(GetObjProperty(victim,"LockPickDiff"));
            if(diff)
                PickLockedItem(who, lockpick, victim, diff);
                return;
            else
                SendSysMessageCL( who, 502073, color := 44 ); // This lock cannot be picked by normal means...
                return;
            endif
        endif
    endif
endprogram

function PickMLockedItem(who, lockpick, chest, diff)
    if(!chest.locked)
        SendSysMessageCL( who, 502069, color := 44 ); // This does not appear to be locked.
        return;
    endif
    PlaySoundEffect(who, SFX_242);
    sleep(1);
    if(SkillCheck(who, LOCKPICKING, diff, (diff * 2)) > 0)
		SendSysMessagecl( who, 502076, color := 68 ); // The lock quickly yields to your skill.
		PrintTextAbovePrivateCL( who, chest, 3005143, color := 68 ); // Unlocked
        EraseObjProperty(chest, "MLockPickDiff");
        SetObjProperty( chest, "LastPickedBySerial", who.serial );
        chest.locked := 0;
    else
        PrintTextAbovePrivateCL( who, chest, 502075, color := 33 ); // You are unable to pick the lock.
        if(diff < 10)
            diff := 0;
        else
            diff := diff -10;
        endif
        if(!SkillCheck(who, LOCKPICKING, diff, 0) > 0)
            PlaySoundEffect(chest,0xef);
            SendSysMessageCL( who, 502074, color := 33 ); // You broke the lockpick.
            SubtractAmount(lockpick,1);
        endif
        return;
    endif
endfunction

function PickLockedItem(who, lockpick, chest, diff)
    if(!chest.locked)
        SendSysMessageCL( who, 502069, color := 44 ); // This does not appear to be locked.
        return;
    endif
    PlaySoundEffect(who, SFX_242);
    sleep(1);
    if(SkillCheck(who, LOCKPICKING, diff, (diff * 2)) > 0)
		SendSysMessageCL( who, 502076, 3, 68 ); // The lock quickly yields to your skill.
		PrintTextAbovePrivateCL( who, chest, 3005143, color := 68 ); // Unlocked
		SetObjProperty( chest, "LastPickedBySerial", who.serial );
    else
        // PrintTextAbovePrivate(chest,"You fail to pick the lock.",who);
        PrintTextAbovePrivateCL( who, chest, 502075, color := 33 ); // You are unable to pick the lock.
        if(diff < 10)
            diff := 0;
        else
            diff := diff -10;
        endif
        if(!SkillCheck(who, LOCKPICKING, diff, 0) > 0)
            PlaySoundEffect(chest,0xef);
            SendSysMessageCL( who, 502074, color := 33 ); // You broke the lockpick.
            SubtractAmount(lockpick,1);
        endif
        return;
    endif
    chest.locked := 0;
endfunction

function PickTreasureChest(who, lockpick, chest)
    var lvl := GetObjProperty(chest,"level");
    var guardians := GetObjProperty(chest,"#guardianList" );
    if(guardians)
        foreach guard in guardians
            if(SystemFindObjectBySerial(guard))
                SendSysMessage(who,"You need to kill all the guards");
                return;
            endif
        endforeach
        EraseObjProperty(chest, "#guardianList");
    endif
    if(!lvl)
        SendSysMessageCL( who, 502073, color := 44 ); // This lock cannot be picked by normal means...
        return;
    endif
    if(!chest.locked)
        SendSysMessageCL( who, 502069, color := 33 ); // This does not appear to be locked.
        return;
    endif
    PlaySoundEffect(who, SFX_242);
    sleep(1);
    var diff :=(lvl * 20)+10;
    if(SkillCheck(who, LOCKPICKING, diff, (diff * 2)) > 0)
        PlaySoundEffect(chest,SFX_200);
        //PrintTextAbovePrivate(chest,"*Unlocked!*",who);
		SendSysMessageCL( who, 502076, color := 66 ); // The lock quickly yields to your skill.
		PrintTextAbovePrivateCL( who, chest, 3005143, 66 ); // Unlocked
        SetObjProperty( chest, "LastPickedBySerial", who.serial );
        chest.locked := 0;
        SetObjProperty(chest,"DestroyAt", (ReadGameClock() + DESTROY_TREASURE_CHEST));
	    PrintTextAbove(chest,"The chest will collapse after "+(DESTROY_TREASURE_CHEST / 60)+" minutes");
        start_script(":treasuremap:destroyTimer", chest);
    else
        PrintTextAbovePrivateCL(who, chest, 502075, color := 33 ); // You are unable to pick the lock.
        if(diff < 10)
            diff := 0;
        else
            diff := diff -10;
        endif
        if(!SkillCheck(who, LOCKPICKING, diff, 0) > 0)
            PlaySoundEffect(chest,0xef);
            SendSysMessageCL( who, 502074, color := 33 ); // You broke the lockpick.
            SubtractAmount(lockpick,1);
        endif
        return;
    endif
endfunction
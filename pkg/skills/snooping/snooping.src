use uo;
use os;
use storage;

include "include/client";
include ":attributes:attributes";
include ":snooping:thief";
include "include/trainingskill";
include "include/utility";
include ":charclasses:classes";


var mex;
var mey;

var storage := FindStorageArea("Snooping Storage");
if(!storage)
    storage := CreateStorageArea("Snooping Storage");
endif


program snooping(who)
print("-----------------------");
    var oldPID := CInt(GetObjProperty(who, "#SnoopingPID"));

    var newitem;
    mex := who.x;
    mey := who.y;
    var time := CInt(GetObjProperty(who, "#SnoopingTime"));
    var classLevel := CInt(GetObjProperty(who, "classlevel"));
    var classId := CInt(GetObjProperty(who, "classid"));
    if(!classLevel || (classId != ID_THIEF))
        classLevel := 0;
    endif
    var cfgFile := ReadConfigFile(":snooping:settings");
    var elem := FindConfigElem( cfgFile, classLevel );
    var containerTime := GetConfigInt( elem, "ShowContainerTime" );

    if(!freeHands(who))
        return;
	endif
	if(!needGloves(who))
        return;
	endif

    if((time + containerTime) > ReadGameClock())
        SendSysMessage(who, "You must wait some time before snooping this victim again");
        return;
    endif;



    var data := {};
    data[1] := "snooping";
    data[2] := ReadGameClock();
    data[3] := SKILLID_SNOOPING;
    SetObjProperty(who, "LastUsedSkill", data );
    TrainingSkill(who, data[3]);

    EraseObjProperty(who, "IsMeditating");
    EraseObjProperty(who, "HealTimer");

    SendSysMessage(who, "Select target.");
	var victim  := Target(who);

    if (!victim)
		SendSysMessage(who, "Cancelled.");
		return;
	endif
    if(!CheckLineOfSight(who, victim))
        SendSysMessage(who, "You can't see that!");
        return;
    endif
    if(Distance(who,victim) > 2)
        //SendSysMessage(who, "You are not close enough to snooping that!");
        if(victim.gender == 0)
            SendSysMessage(who, "He is too far away.");
        else
            SendSysMessage(who, "She is too far away.");
        endif
        return;
    endif
    if ((victim.serial==who.serial))
        SendSysMessage(who, "No need to snoop this.");
        return;
    endif
    if (!(victim.graphic in {400, 401}))
        SendSysMessage(who, "You should target a human");
        return;
    endif

    //old
    if(oldPID)
        var old_container := FindRootItemInStorageArea(storage, "Snoop container by "+oldPID);
        CloseWindow( who, 12, old_container );
        DestroyRootItemInStorageArea( storage, "Snoop container by "+oldPID );
        print("Destroy old storage");
    endif



    //new
    SetObjProperty(who, "#SnoopingPID", victim.serial);
    var newContainer := FindRootItemInStorageArea(storage, "Snoop container by "+victim.serial);
    if(!newContainer)
        newContainer := CreateRootItemInStorageArea(storage, "Snoop container by "+victim.serial, 0x1300c);
        print("create newContainer");
    endif



    PrintTextAbovePrivate( who, "*You attempt to peek into the container*", who);

    var pts := CInt(GetAttribute(who, SNOOPING)) + (classLevel * 10);
    SetObjProperty(who, "#SnoopingTime", ReadGameClock());
    sleep(3);

    SendSysMessage(who, "pts: "+pts);
    var diff := GetDiff2(who, victim);

    if (SkillCheck(who, SNOOPING, diff, pts))
        var newContainer := CreateItemAtLocation(victim.x, victim.y, victim.z, 0x1300c, 1, who.realm);
        //var newContainer := CreateItemAtLocation(COPY_BACKPACK_X, COPY_BACKPACK_Y, COPY_BACKPACK_Z, 0x1300c, 1, who.realm); //0x0E75 //0x1300c

        if(!newContainer)
            print("Error create container "+newContainer.errortext);
            return;
        endif;

        var pid := CInt(GetObjProperty(who, "#SnoopingPID"));
        if(pid)
            var oldpack := SystemFindObjectBySerial(pid);
            if(oldpack)
                //CloseWindow( who, 12, oldpack);
                DestroyItem(oldpack);
                print("------DestroyItem OLD-----");
            endif
        endif


        SetObjProperty(newContainer, "expire", ReadGameClock()+containerTime);

        var items := EnumerateItemsInContainer(victim.backpack, ENUMERATE_ROOT_ONLY);
        var copiesCount := 0;
        var copiesNoCount := 0;
        foreach item in items
            var tname := item.name;
            if(item.newbie == 0)
                var newitem := CreateItemCopyAtLocation(newContainer.x, newContainer.y, newContainer.z, item, who.realm);
                if(victim.isa(POLCLASS_NPC))
                    newitem.name := "Fake Item";
                endif
                SetObjProperty(newitem, "realitem", item.serial);
                MoveItemToContainer(newitem, newContainer, item.x, item.y);
                RecursiveCopy(victim, item, newitem, copiesCount);
                newitem.movable := 0;
                copiesCount := copiesCount+1;
            else
                copiesNoCount := copiesNoCount+1;
            endif
        endforeach

        SetObjProperty(newContainer,"noInsert",1);
        if(who.cmdlevel > 2)
            SendSysMessage(who, copiesCount+ " items copied, "+copiesNoCount+" were not copied.");
        endif

        //print("------SendViewContainer-----");
        //SetObjProperty(who, "#SnoopingPID", newContainer.serial);
        //SendViewContainer( who, newContainer );
        //Detach();







SendOpenSpecialContainer( who, newContainer );
Detach();
sleep(containerTime);
CloseWindow( who, 12, newContainer );
DestroyRootItemInStorageArea( storage, "Snoop container by "+victim.serial );

        print("------DestroyItem-----");
        EraseObjProperty(who, "#SnoopingTime");
        EraseObjProperty(who, "#SnoopingPID");

        return;
    else
	    tellplayers(who);
	    //callguard(who);
	    who.setCriminal(1);
        SendSysMessage(who, "fail.");
		return;
    endif
endprogram

function RecursiveCopy(who, originalItem, copy, byref copiesCount)
    Set_Critical(1);
    if (originalItem.isA(POLCLASS_CONTAINER))
        var items := EnumerateItemsInContainer(originalItem, ENUMERATE_ROOT_ONLY);
        foreach item in items
            var newitem := CreateItemCopyAtLocation(who.x,who.y,who.z,item);
            SetObjProperty(newitem, "realitem", item.serial);
            MoveItemToContainer(newitem, copy, item.x, item.y);
            newitem.movable := 0;
            copiesCount := copiesCount + 1;
            RecursiveCopy(who, item, newitem, copiesCount);
        endforeach
    endif
    Set_Critical(0);
endfunction


function GetDiff2(who, victim)
    var victimLevel := CInt(GetObjProperty( victim, "classlevel" ));
    var victimClass := CInt(GetObjProperty( victim, "classid" ));
    if(victimClass != ID_THIEF)
        victimLevel := 0;
    endif
    print("-------------- "+who.name+" > "+victim.name);
    var skill := GetEffectiveSkill( who, SKILLID_SNOOPING );


    var whoskill := CInt(skill/4) + CInt(GetDexterity(who)/4) + CInt(GetObjProperty( who, "classlevel" )) * 10;


    var victimskill := CInt(GetDexterity(victim)/2) + CInt(GetIntelligence(victim)/2) + victimLevel * 10;


    var chance := victimskill - whoskill;


    SendSysMessage(who, "chance: "+chance);
    return chance;
endfunction

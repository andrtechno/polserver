use uo;
use os;
use util;

include ":npcs:NPCBackpacks";
include ":attributes:attributes";
include ":virtue:noto";
include "include/reportMurder";
include ":timedScripts:poisonUtil";

program chrdeath(corpse,ghost)
  EraseObjProperty(ghost, "IsMeditating");
  ghost.SetPoisoned(0);
  while(TS_GetTimerNames(ghost, "P").size() > 0)
		TS_CurePoison(ghost, 10000, "P", 6);
  endwhile
  var killer := GetObjProperty(ghost, "LastHit");
  if(killer != error)
    AdjustNoto((SystemFindObjectBySerial(killer[2], SYSFIND_SEARCH_OFFLINE_MOBILES)), ghost);
  endif
  var fame := CInt(GetObjProperty(ghost, "Fame"));
  fame := (fame - CInt(fame / 20));
  SetObjProperty(ghost, "Fame", fame);
  SetObjProperty(corpse,"serial", ghost.serial);
  dismount(corpse);
  CheckForAutoRes(ghost, corpse);
  CheckForDivineRes(ghost, corpse);
  var corpsenamearray := SplitWords(corpse.name);
  var corpsenamearraylen := len(corpsenamearray);
  var x, corpsename := "";
  for (x := 4; x <= corpsenamearraylen; x := x + 1)
    corpsename := corpsename + " " + corpsenamearray[x];
  endfor
  if(len(ghost.reportables)>0)
	SendReportGump(ghost);
  endif
endprogram

function CheckForAutoRes(who, corpse)
  if(CInt(GetObjProperty(corpse, "AutoRes")) == 1)
	Resurrect(who);
	AP_SetVital(who, VITALID_LIFE, AP_GetVitalMaximumValue(who, VITALID_LIFE));
	AP_SetVital(who, VITALID_MANA, AP_GetVitalMaximumValue(who, VITALID_MANA));
	AP_SetVital(who, VITALID_STAMINA, AP_GetVitalMaximumValue(who, VITALID_STAMINA));
	var mypack := who.backpack;
    if(!mypack)
      return;
    endif
	foreach thing in EnumerateItemsInContainer(corpse)
	  if(thing.container == corpse)
	    if(!EquipItem(who, thing))
		  MoveItemToContainer(thing, mypack);
	    endif
	  endif
	endforeach
  endif
endfunction

function CheckForDivineRes(who, corpse)
  if ( CInt( GetObjProperty(corpse, "DivineRes") ) == 1 )
    EraseObjProperty(corpse, "DivineRes");
    EraseObjProperty(who, "DivineRes");
    Resurrect(who);
    PrintTextAbove(who, who.name + " has been restored by the Gods!");
    PlaySoundEffect(who, 0x11e);
    var itemlist := EnumerateItemsInContainer(corpse);
    var mypack := GetEquipmentByLayer(who, 0x15);
    foreach x in itemlist
      if (!EquipItem(who, x) )
        if (x.container == corpse)
            MoveItemToContainer(x, mypack);
        endif
      endif
    endforeach
    AP_SetVital(who, VITALID_LIFE, who.maxhp);
    AP_SetVital(who, VITALID_MANA, who.maxmana);
    AP_SetVital(who, VITALID_STAMINA, who.maxstamina);
  endif
endfunction

function dismount(corpse)
  var mount := GetEquipmentByLayer( corpse, 25 );
  foreach item in EnumerateItemsInContainer(corpse)
	if (item.objtype == 0x1F021)
	  mount := item;
	  break;
	endif
  endforeach
  if (!mount)
	return;
  endif
  var animal := SystemFindObjectBySerial(CInt(GetObjProperty(mount,"serial")));
  animal.facing := corpse.facing;
  EraseObjProperty(animal, "mounted");
  EraseObjProperty(animal, "mounted_on");
  MoveObjectToLocation( animal, corpse.x, corpse.y, corpse.z, corpse.realm, MOVEOBJECT_FORCELOCATION);
  DestroyItem(mount);
endfunction

function remove_poison (cast_on)

  if (ListPoisonsByType(cast_on, "defaultPoison").size() > 0)
    CurePoison(cast_on, 120, "defaultPoison", 4);
    if (ListPoisonsByType(cast_on, "defaultPoison").size() > 0)
        CurePoison(cast_on, 120, "defaultPoison", 4);
    endif
  endif

endfunction


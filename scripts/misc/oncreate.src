use uo;

include "include/startEqp";
include ":timeutils:time";
include ":containers:storageAreas";

program oncreate(who, skillids, profession)
    var prof := profession; //warings
    var dmy, hms;


    if(who.graphic == 605 || who.graphic == 666) //man
        who.graphic := 400;
        who.race := RACE_HUMAN;
        var beard := GetEquipmentByLayer( who, LAYER_BEARD );
        DestroyItem( beard );
        var hair := GetEquipmentByLayer( who, LAYER_HAIR );
        DestroyItem( hair );
    elseif(who.graphic == 606 || who.graphic == 667) //woman
        who.graphic := 401;
        who.race := RACE_HUMAN;
        var beard := GetEquipmentByLayer( who, LAYER_BEARD );
        DestroyItem( beard );
        var hair := GetEquipmentByLayer( who, LAYER_HAIR );
        DestroyItem( hair );

    endif





//SendCharacterRaceChanger( who );
    //Sleep(1);

    if((13 in CAscZ(who.name)) || (10 in CAscZ(who.name)))
        var account := who.acct;
        account.ban();
        for i:=1 to 5
            account.DeleteCharacter( i );
        endfor
        syslog("ALERT! Account " + account.name + " was banned for cheating.");
    endif

    /*if(who.truecolor in {1032, 1040, 1042, 1047, 1048}) // || (CInt(who.truecolor) <= 32768)
        who.truecolor := 33770;
        who.color := who.truecolor;
    endif*/
    who.truecolor := 33770;
    who.color := who.truecolor;




    SetObjProperty(who, "OnCreate", ReadGameClock());
    dmy := FormatTime(GetTimeStruct(GetTime()), "<DAY>-<MON>-<YY>");
    hms := FormatTime(GetTimeStruct(GetTime()), "<HH>:<MM>:<SS>");
    SetObjProperty(who, "CreationDate", dmy + " " + hms);



    var has_backpack := GetEquipmentByLayer(who, 0x15);
    if (!has_backpack)
        var newbackpack := CreateItemAtLocation(who.x, who.y, who.z, 0xe75, 1, who.realm);
        if (!EquipItem(who, newbackpack))
            Print("Could not create a backpack on player " + who.name);
            SysLog("Could not create a backpack on player " + who.name);
        endif
    endif

    CP_GetStorageContainerForMobile( who, CP_DEFAULT_AREA, CP_CREATE );
    CreateStartingEquipment(who, skillids);


endprogram
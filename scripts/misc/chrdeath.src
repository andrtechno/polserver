use uo;
use os;
use util;

include "include/NPCBackpacks";
include ":attributes:attributes";
include "include/statMod";
include "include/noto";
include "include/reportMurder";
include ":poisonwatcher:poisons";
include "include/utility";
include "include/itemtypes";
include "include/npcstats";
include ":damage:damage";
include "include/buff";

var allmyjunk := {};
var stackstuff := 0;


program chrdeath(corpse,ghost)
//  var marker, num;
  EraseObjProperty(ghost, "IsMeditating");
  ghost.SetPoisoned(0);
  while(ListPoisonsByType(ghost, "defaultPoison").size() > 0)
      CurePoison(ghost, "defaultPoison", 120, 1);
  endwhile
  var killer := GetObjProperty(ghost, "LastHit");
  if(killer != error)
    AdjustNoto((SystemFindObjectBySerial(killer[2], SYSFIND_SEARCH_OFFLINE_MOBILES)), ghost);
  endif
  var fame := CInt(GetObjProperty(ghost, "Fame"));
  fame := (fame - CInt(fame / 20));
  SetObjProperty(ghost, "Fame", fame);
  SetObjProperty(corpse,"serial", ghost.serial);
  dismount(corpse);
  CheckForAutoRes(ghost, corpse);
  CheckForDivineRes(ghost, corpse);
  var corpsenamearray := SplitWords(corpse.name);
  var corpsenamearraylen := len(corpsenamearray);
  var x, corpsename := "";
  for (x := 4; x <= corpsenamearraylen; x := x + 1)
    corpsename := corpsename + " " + corpsenamearray[x];
  endfor
/*
  // We create a marker to replace a corpse so we really don't die.
  marker := CreateItemAtLocation(6143, 0, 0, 0x5000, 1, "britannia_alt");
  if(marker.errortext)
      Broadcast(marker.errortext);
  endif
//  marker.graphic := 0x512;
  foreach prop in GetObjPropertyNames(corpse)
    SetObjProperty( marker, prop, GetObjProperty( corpse, prop ) );
    Sleepms(1);
  endforeach
  marker.name := "The place where " + ghost.name + " fell.";
    foreach item in ListRootItemsInContainer(corpse)
	if (item != marker && !item.newbie)
	    if (!ReserveItem(item) )
		return;
	    endif
	    num := num + 1;
	    MoveTheItem(item, corpse, marker);
	endif
    endforeach
  DestroyItem(corpse);
  MoveObjectToLocation(marker, ghost.x, ghost.y, ghost.z, ghost.realm, MOVEOBJECT_FORCELOCATION);
*/


	var mr := GetObjProperty(ghost, "MagicReflection");
	var resistances := GetObjProperty(ghost, "%Resistances%");
	if(mr)
		ModifyResistance(ghost, DMG_PHYSICAL, mr);
		//BuffDebuff_removeIcon(ghost,1031);
		EraseObjProperty(ghost, "MagicReflection");
	endif
    if(resistances)
        if(resistances[DMG_FIRE])
            ModifyResistance(ghost, DMG_FIRE, resistances[DMG_FIRE]);
        endif
        if(resistances[DMG_COLD])
            ModifyResistance(ghost, DMG_COLD, resistances[DMG_COLD]);
        endif
        if(resistances[DMG_POISON])
            ModifyResistance(ghost, DMG_POISON, resistances[DMG_POISON]);
        endif
        if(resistances[DMG_ENERGY])
            ModifyResistance(ghost, DMG_ENERGY, resistances[DMG_ENERGY]);
        endif
    endif

ghost.clearBuffs();



  if(len(ghost.reportables)>0)
	SendReportGump(ghost);
  endif


endprogram

function CheckForAutoRes(who, corpse)
  if(CInt(GetObjProperty(corpse, "AutoRes")) == 1)
	Resurrect(who);
	SetHp(who, GetMaxHP(who));
	SetMana(who, GetMaxMana(who));
	SetStamina(who, GetMaxStamina(who));
	var mypack := who.backpack;
    if(!mypack)
      return;
    endif
	foreach thing in EnumerateItemsInContainer(corpse)
	  if(thing.container == corpse)
	    if(!EquipItem(who, thing))
		  MoveItemToContainer(thing, mypack);
	    endif
	  endif
	endforeach
  endif
endfunction

function CheckForDivineRes(who, corpse)
  if ( CInt( GetObjProperty(corpse, "DivineRes") ) == 1 )
    EraseObjProperty(corpse, "DivineRes");
    EraseObjProperty(who, "DivineRes");
    Resurrect(who);
    PrintTextAbove(who, who.name + " has been restored by the Gods!");
    PlaySoundEffect(who, 0x11e);
    var itemlist := EnumerateItemsInContainer(corpse);
    var mypack := GetEquipmentByLayer(who, 0x15);
    foreach x in itemlist
      if (!EquipItem(who, x) )
        if (x.container == corpse)
            MoveItemToContainer(x, mypack);
        endif
      endif
    endforeach
    SetHp(who, who.maxhp);
    SetMana(who, who.maxmana);
    SetStamina(who, who.maxstamina);
  endif
endfunction

function dismount(corpse)

  var mount := FindObjtypeInContainer( corpse, 0x1F021, FINDOBJTYPE_ROOT_ONLY );

  if( mount.errortext )
    return 0;
  endif

  var animal := SystemFindObjectBySerial(CInt(GetObjProperty(mount,"serial")));
  var master := SystemFindObjectBySerial(CInt(GetObjProperty(animal,"master")));
  animal.facing := corpse.facing;
  EraseObjProperty(animal, "mounted");
  EraseObjProperty(animal, "mounted_on");
  MoveObjectToLocation( animal, corpse.x, corpse.y, corpse.z, corpse.realm, MOVEOBJECT_FORCELOCATION);
  DestroyItem(mount);
  //removebonus(master,animal);
  npcbonus(master,animal);
endfunction

function remove_poison (cast_on)

  if (ListPoisonsByType(cast_on, "defaultPoison").size() > 0)
    CurePoison(cast_on, 120, "defaultPoison", 4);
    if (ListPoisonsByType(cast_on, "defaultPoison").size() > 0)
        CurePoison(cast_on, 120, "defaultPoison", 4);
    endif
  endif

endfunction

///////////////////
//  Does the actual work of moving the item
///////////////////

function MoveTheItem(item, oldcontainer, newcontainer)
	if (IsStackableItem(item) )
		if (stackstuff)
			foreach thing in allmyjunk
				if (item.objtype == thing.objtype && item.color == thing.color)
					if (thing.container != oldcontainer )
						AddAmount(thing, item.amount);
						DestroyItem(item);
					endif
				endif
			endforeach
		endif
		CreateItemInContainer(newcontainer, item.objtype, item.amount);
		DestroyItem(item);
	else
		MoveItemToContainer(item, newcontainer);
	endif
endfunction
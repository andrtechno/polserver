use uo;
use os;
include ":attributes:attributes";
include "include/statMod";
include "include/buff";

program demod(parms)
    var mod := lower(parms[1]);
    var who := parms[2];
    var amt := parms[3];
    var duration := parms[4];
    var timeleft := parms[5];

    case(mod)
        "#p"  :
            who.setParalyzed(1);

        "#cast_protection":
        "#ar":
            who.ar_mod := who.ar_mod + amt;

        "#cast_bless":
            SetStrengthMod(who, GetStrengthMod(who) + amt);
            SetDexterityMod(who, GetDexterityMod(who) + amt);
            SetIntelligenceMod(who, GetIntelligenceMod(who) + amt);

        "#cast_agility":
        "#dexbonus":
        "#dex":
        "#p_dex":
            SetDexterityMod(who, GetDexterityMod(who) + amt);

        "#cast_strength":
        "#strbonus":
        "#str":
        "#p_str":
            SetStrengthMod(who, GetStrengthMod(who) + amt);

        "#cast_cunning":
        "#intbonus":
        "#int":
        "#p_int":
            SetIntelligenceMod(who, GetIntelligenceMod(who) + amt);
        "#cast_poly":
            SetStrengthMod(who, GetStrengthMod(who) + amt);
            SetDexterityMod(who, GetDexterityMod(who) + amt);
            SetIntelligenceMod(who, GetIntelligenceMod(who) + amt);
            who.ar_mod := who.ar_mod + amt;
    endcase

    var buff_id;
    var debuff:=1;
    case(mod)
        "#cast_bless":          buff_id:=1048;
        "#cast_cunning":
            buff_id:=1046;
            if(amt<0)
                buff_id:=1041;
            endif
        "#cast_strength":
            buff_id:=1047;
            if(amt<0)
                buff_id:=1042;
            endif
        "#cast_agility":
            buff_id:=1045;
            if(amt<0)
                buff_id:=1040;
            endif

        "#cast_poly":           buff_id:=1035;
        "#cast_protection":     buff_id:=1029;
        "#p":                   buff_id:=1037;
    endcase


    BuffDebuff_AddIcon(who,buff_id,duration);
    var prop:=struct;
    prop.+value := amt;
    prop.+duration := duration;
    prop.+timeleft := ReadGameClock() + duration;
    prop.+buff_id := buff_id;
    SetObjProperty(who,mod,prop);
    sleep(duration);
    var modd := GetObjProperty( who, mod );
    if(ReadGameClock() >= modd.timeleft)
        undo_mod(who, mod, amt);
        BuffDebuff_removeIcon(who,buff_id);
    endif;
endprogram



/*
program demod(parms)

    var mod := lower(parms[1]);
    var who := parms[2];
    var amt := parms[3];
    var duration := parms[4];
    var timeleft := parms[5];
    var modd := GetObjProperty( who, "#"+mod );

    Detach();
    sleep(duration);
    set_critical(1);

    print("demod: "+modd);


        undo_mod(who, mod, amt);

  	set_critical( 0 );
endprogram*/


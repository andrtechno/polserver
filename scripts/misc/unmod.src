use uo;
use os;
include ":attributes:attributes";
include "include/statMod";

program demod(parms)
    var mod := lower(parms[1]);
    var who := parms[2];
    var amt := parms[3];
    var duration := parms[4];
    var timeleft := parms[5];

    case(mod)
        "#p"  :
            who.setParalyzed(1);

        "#cast_protection":
        "#ar":
            who.ar_mod := who.ar_mod + amt;

        "#cast_bless":
            SetStrengthMod(who, GetStrengthMod(who) + amt);
            SetDexterityMod(who, GetDexterityMod(who) + amt);
            SetIntelligenceMod(who, GetIntelligenceMod(who) + amt);

        "#cast_agility":
        "#dexbonus":
        "#dex":
        "#p_dex":
        "#cast_clumsy":
            SetDexterityMod(who, GetDexterityMod(who) + amt);

        "#cast_strength":
        "#strbonus":
        "#str":
        "#p_str":
        "#cast_weaken":
            SetStrengthMod(who, GetStrengthMod(who) + amt);

        "#cast_cunning":
        "#intbonus":
        "#int":
        "#p_int":
        "#cast_feeblemind":
            SetIntelligenceMod(who, GetIntelligenceMod(who) + amt);

        "#cast_poly":
            SetStrengthMod(who, GetStrengthMod(who) + amt);
            SetDexterityMod(who, GetDexterityMod(who) + amt);
            SetIntelligenceMod(who, GetIntelligenceMod(who) + amt);
            who.ar_mod := who.ar_mod + amt;
    endcase

    var buff_id;
    var debuff:=1;
    case(mod)
        "#cast_bless":
            buff_id:=1048;
            var b := CStr(amt)+"\t"+CStr(amt)+"\t"+CStr(amt);
            who.addBuff(buff_id, duration, 1075847, 1075848, b);
        "#cast_cunning":
            buff_id:=1046;
            who.addBuff(buff_id, duration, 1075843, 1075844, CStr(amt));
        "#cast_feeblemind":
            buff_id:=1041;
            who.addBuff(buff_id, duration, 1027984, 1075834, CStr(StrReplace(amt,"-","")));
        "#cast_strength":
            buff_id:=1047;
            who.addBuff(buff_id, duration, 1075845, 1075846, CStr(amt));
        "#cast_weaken":
            buff_id:=1042;
            who.addBuff(buff_id, duration, 1075845, 1075838, CStr(StrReplace(amt,"-","")));
        "#cast_agility":
            buff_id:=1045;
            who.addBuff(buff_id, duration, 1075841, 1075842, CStr(amt));
        "#cast_clumsy":
            buff_id:=1040;
            who.addBuff(buff_id, duration, 1075831, 1075832, CStr(StrReplace(amt,"-","")));
        "#cast_poly":
            buff_id:=1035;
                //var mr := CStr("-"+points)+"\t"+CStr(10)+"\t"+CStr(10)+"\t"+CStr(10)+"\t"+CStr(10);
            who.addBuff(buff_id, duration, 1075824, 502156, "");
        "#cast_protection":
            buff_id:=1029;
            who.addBuff(buff_id, duration, 1075814, 1072382, CStr(amt));
        "#p":
            buff_id:=1037;
            who.addBuff(buff_id, duration, 1015199, "", "");
    endcase


    //BuffDebuff_AddIcon(who,buff_id,duration);
    var prop:=struct;
    prop.+value := amt;
    prop.+duration := duration;
    prop.+timeleft := ReadGameClock() + duration;
    prop.+buff_id := buff_id;
    SetObjProperty(who,mod,prop);
    sleep(duration);
    var modd := GetObjProperty( who, mod );
    if(ReadGameClock() >= modd.timeleft)
        undo_mod(who, mod, amt);
        //BuffDebuff_removeIcon(who,buff_id);
        who.delBuff(buff_id);
    endif;
endprogram



/*
program demod(parms)

    var mod := lower(parms[1]);
    var who := parms[2];
    var amt := parms[3];
    var duration := parms[4];
    var timeleft := parms[5];
    var modd := GetObjProperty( who, "#"+mod );

    Detach();
    sleep(duration);
    set_critical(1);

    print("demod: "+modd);


        undo_mod(who, mod, amt);

  	set_critical( 0 );
endprogram*/


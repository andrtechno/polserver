use npc;
use os;
use uo;

include "include/eventID";
include "include/sysEvent";
include "include/randName";
include "include/utility";
include "include/mrcSpawn";
include "include/vetement";
include "include/NPCBackpacks";
include "include/client";
include "include/anchors";
include "include/findCity";
include "include/dist";
include "include/begging";
include ":attributes:attributes";
include "include/trainSkill";
include "include/objtype";

const MAX_SKILLS      := 48;
const REACT_THRESHOLD := 4;
var buyimage  := {0x211b, 0x211c, 0x2121, 0x2124, 0x211f, 0x2120, 0x2126, 0x20f6, 0x211a, 0x2123, 0x2125, 0x2122, 0x211e, 0x211d, 0x2119, 0x20e6, 0x2108, 0x2103, 0x2101, 0x2135, 0x2136, 0x2137, 0x2127};

var sellimage := {0xc9, 0xd9, 0xcc, 0xc8, 0xe2, 0xe4, 0x123, 0xdc, 0x06, 0xee, 0xcd, 0xe1, 0xd4, 0x05, 0xd6, 0xcf, 0xd1, 0xd8, 0xcb, 0xd2, 0xda, 0xdb, 0x124};

var pettemplate :={"cat", "dog", "horse", "horse2", "horse3", "horse4", "packhorse", "llama", "bird", "rat", "rabbit", "wolf", "grizzly", "eagle", "panther", "sheep", "goat", "cow", "pig", "desertostard", "frenziedostard", "forestostard", "packllama"};

var me := Self();
//me.hidden := 1;
me.freeze := 1;
var inv_fs, inv_pb, inv_1c, inv_rs;
var merchant_type := GetObjProperty(me,"MerchantType");
var equipt        := GetObjProperty(me, "Equipt");
var npccfg        := ReadConfigFile("npcdesc");

set_priority(50);

program merchant()
  if(!merchant_type)
    SetObjProperty(me, "MerchantType", "Mage");
    merchant_type := "Mage";
  endif
  start_script("NPCKeeper", me);
  var myanchor := GetObjProperty(me, "Anchor");
  if(myanchor)
    MoveObjectToLocation(me, myanchor[1], myanchor[2], myanchor[3], me.realm, MOVEOBJECT_FORCELOCATION);
  endif
  drop_anchor();
  myanchor     := GetObjProperty(me, "Anchor");
  var spawnname := merchant_type + " " + myanchor[1] + " " + myanchor[2] + " " + myanchor[3];

  create_node_merc(merchant_type, spawnname);

  inv_fs := FindRootItemInStorageArea(storage, spawnname + " FS");
  inv_pb := FindRootItemInStorageArea(storage, spawnname + " PB");
  inv_1c := FindRootItemInStorageArea(storage, spawnname + " 1C");
  inv_rs := FindRootItemInStorageArea(storage, spawnname + " RS");

  while((!inv_rs) or (!inv_fs) or (!inv_pb) or (!inv_1c))
    sleep(5);
    inv_fs := FindRootItemInStorageArea(storage, spawnname + " FS");
    inv_pb := FindRootItemInStorageArea(storage, spawnname + " PB");
    inv_1c := FindRootItemInStorageArea(storage, spawnname + " 1C");
    inv_rs := FindRootItemInStorageArea(storage, spawnname + " RS");
  endwhile
  me.hidden := 0;
  EnableEvents(EVID_SPEECH,SYSEVENT_SPEECH, REACT_THRESHOLD);
  //DisableEvents(SYSEVENT_SPEECH);
  if(GetObjProperty(me, "frozen"))
    me.frozen := 1;
  endif
  var next_wander := ReadGameClock() + 10;
  const loops := 0;
  while (1)
    var ev;
    ev := os::wait_for_event(120);
    if(ev)
      case (ev.type)
        SYSEVENT_SPEECH:                var txt := lower(ev.text);


if (txt["buy"])
                    TurnToward( ev.source );
                    SetObjProperty(ev.source, "#buy", 1);
                    var res := SendBuyWindow( ev.source, inv_fs, me, inv_pb );
                    EraseObjProperty(ev.source, "#buy");
                    if (!res)
                        print( "SendBuyWindow failed: " + res.errortext );
                    endif
                elseif (txt["sell"])
                    TurnToward( ev.source );
                    if (GetObjProperty(ev.source, "#buy")==1)
                    say( "You can't sell while buying." );
                    else
		    sellanimal( ev.source );
		    endif
  endif
        SYSEVENT_ITEM_GIVEN:    TurnToward (ev.source);
                                if ( GetObjProperty ( ev.item, "merchant") )
                                        PayForJobCompleted ( ev );
//                                elseif (GetObjProperty (ev.item, "deliverto") and GetObjProperty (ev.item, "deliverto") == me.serial)
//                                        PayForItemDelivery (ev);
                                elseif ( ev.item.objtype == UOBJ_GOLD_COIN )
                                        TrainSkill(me, ev.source, ev.item);
//                                else
//                                        TakeItem(ev.source, ev.item);
                                endif

      endcase
    endif
	if(ReadGameClock() >= next_wander)
	  begpurse(me);
      wander();
      if(coordist(me.x, me.y, myanchor[1], myanchor[2]) > 5)
        MoveObjectToLocation(me, myanchor[1], myanchor[2], myanchor[3], me.realm, MOVEOBJECT_FORCELOCATION);
      endif
      next_wander := ReadGameClock() + 30;
    endif
  endwhile
endprogram

function Lookiehere(who, npc)
  var ev;
  ev := array;
  ev.+ type;
  ev.+ source;
  ev.type := SYSEVENT_SPEECH;
  ev.text := "node";
  ev.source := npc;
  foreach thing in ListItemsNearLocationOfType(who.x, who.y, who.z, 15, 0x1887b, who.realm)
    SendEvent(thing, ev);
  endforeach
endfunction


///////////////////
//  called when someone hands in a job bag
// Added by Yukiko 04-Oct-2006 from Sanc scripts.
///////////////////

function PayForJobCompleted (byref ev)
	var bag := ev.item;
	var player := ev.source;

	if (GetObjProperty (bag, "merchant") != me.serial)
		say("I didn't ask for that.");
		return;
	endif

	var endtime := GetObjProperty (bag, "endtime");
	if ( ReadGameClock() > endtime )
		say("You didn't complete this order in time.");
		DestroyItem (bag);
		return;
	endif

	var count := 0;
	foreach item in EnumerateItemsInContainer (bag)
		if (GetObjProperty(item, "job") == bag.serial)
			count := count + 1;
		endif
	endforeach

	if (!count)
		say ("Just what are you trying to pull?");
		return;
	endif

	var jobattribute := AP_SkillIdToAttributeName (GetObjProperty (bag, "jobtype"));

	var goldamount := count * CINT(GetAttribute (player, jobattribute)/5);
	if (!goldamount)
		goldamount := count;
		say("This is some crappy workmanship.  I'll only pay " + goldamount + " gold for this.");
	else
		say("Good job! Here is your " + goldamount + " gold.");
	endif

	CreateItemInContainer (player.backpack, UOBJ_GOLD_COIN, goldamount);
	PlaySoundEffect (me, 0x38);
	DestroyItem (bag);

	var playerjobs := GetGlobalProperty ("#jobs_for_account_"+player.acctname);
	if (!playerjobs)
		playerjobs := dictionary;
	endif
	playerjobs.insert (ReadGameClock(), goldamount);
	SetGlobalProperty ("#jobs_for_account_"+player.acctname, playerjobs);
endfunction


///////////////////
//  called by 'sell bag'
///////////////////

function BuyBag (byref you)
	PrintTextAbovePrivate ( me, "What bag of stuff would you like to sell me?", you );
	var bag := Target (you);
	if (!bag)
		PrintTextAbovePrivate (me, "OK, never mind then.", you);
		return;
	endif

	if (!bag.isa (POLCLASS_CONTAINER))
		PrintTextAbovePrivate (me, "But that's not even a bag!", you);
		return;
	endif
	
	if (bag != you.backpack)
		if (!InInventory (you.backpack, bag) )
			PrintTextAbovePrivate (me, "That bag isn't in your inventory.", you);
			return;
		endif
	endif

	if (!len (EnumerateItemsInContainer (bag)))
		PrintTextAbovePrivate (me, "But that bag is empty!", you);
		return;
	endif

	var elem, itemprice, itemamount;
	var itemdesc := ReadConfigFile (":*:itemdesc");
	var totalsale := 0;

	foreach item in ListRootItemsInContainer (bag)
		if (IsBuyableItem (you, item, 1) )
			elem := FindConfigElem (itemdesc, item.objtype);
			if (elem)
				itemprice := GetConfigInt (elem, "vendorbuysfor");
				itemamount := item.amount;
				if (itemprice and itemamount)
					if (totalsale + (itemprice * itemamount) < 50000)
						totalsale := totalsale + (itemprice * itemamount);
						if( !ReserveItem( item ) )
							SysLog( "Reserved item sale!"
									+ " Acct: " + you.acctname
									+ " Serial: " + you.serial
									+ " Item: " + item.objtype
									+ " Gold: " + itemprice );
						endif
						DestroyItem (item);
						sleepms (100);
					else
						break;
					endif

					if (totalsale > 50000)
						break;
					endif
				endif
			endif
		endif
	endforeach

	if (totalsale)
		PrintTextAbovePrivate (me, "The total of your sale is " + totalsale, you );
		CreateItemInContainer (you.backpack, UOBJ_GOLD_COIN, totalsale);
		PlaySoundEffect (me, 0x38);
	else
		PrintTextAbovePrivate (me, "I'm afraid I don't want any of those items.", you);
	endif
endfunction




///////////////////
//  called by 'sell all'
///////////////////

function BuyAll (byref you)

	PrintTextAbovePrivate (me, "What would you like me to buy all of?", you );
	var items := Target (you);
	if ( !items or !Accessible (you, items) )
		PrintTextAbovePrivate (me, "OK, never mind them.", you);
		return;
	endif

	var itemdesc := ReadConfigFile (":*:itemdesc");
	var elem := FindConfigElem (itemdesc, items.objtype);
	if (!elem)
		PrintTextAbovePrivate (me, "Sorry, but I don't want that.", you);
		return;
	endif

	var itemprice := GetConfigInt (elem, "vendorbuysfor");
	//crude hack because the sell window can't handle prices > 60000
	if (!itemprice)
		itemprice := GetConfigInt (elem, "BuyPrice");
	endif

	if (!itemprice)
		PrintTextAbovePrivate (me, "Sorry, but I don't want that.", you);
		return;
	endif

	if ( itemprice > 30000 )
		if (!ReserveItem(items))
			return;
		endif
		say("Ooh, an expensive one!");
		while (itemprice > 60000)
			CreateItemInContainer (you.backpack, "goldcoin", 60000);
			itemprice := itemprice - 60000;
		endwhile
		CreateItemInContainer (you.backpack, "goldcoin", itemprice);
		DestroyItem (items);
		return;
	endif

	var thecolor := items.color;
	var totalsale := 0;
	var itemamount := 0;

	foreach item in ListRootItemsInContainerOfObjtype (items.container, items.objtype)
		if ( item.color == thecolor and IsBuyableItem (you, item, 0) )
			itemamount := item.amount;
			if (totalsale + (itemprice * itemamount) < 50000)
				totalsale := totalsale + (itemprice * itemamount);
				DestroyItem (item);
				sleepms (100);
			else
				break;
			endif

			if (totalsale > 50000)
				break;
			endif
		endif
	endforeach

	if (totalsale)
		PrintTextAbovePrivate (me, "The total of your sale is " + totalsale, you );
		CreateItemInContainer (you.backpack, UOBJ_GOLD_COIN, totalsale);
		PlaySoundEffect (me, 0x38);
	else
		PrintTextAbovePrivate (me, "I'm afraid I don't want that.", you);
	endif
endfunction




function sellanimal(who)

	var i;

	say("What pet would you like to sell?");

	var pet := Target(who);

	if ((!pet) || (pet==""))
		SendSysMessage(who, "canceled.");
		return;
	endif

	   var tempdata	:= GetObjProperty(pet, "master");
	   var summoned	:= GetObjProperty(pet, "summoned");
	   var animated	:= GetObjProperty(pet, "animated");
	   var charmed	:= GetObjProperty(pet, "charmed");

	   if (!tempdata)
		say("I cannot buy that.");
		return;
	   endif

	   if ((pet.script == "tamed") && (tempdata == who.serial) && !summoned && !animated && !charmed)

		if ((pet.objtype==0xd3) && (pet.color==0x02e6))
			   CreateItemInContainer(inv_fs, 0x20cf, 1);

		elseif (pet.objtype==0xd3)
			   CreateItemInContainer(inv_fs, 0x2118, 1);
		else
		for(i:=1;i<=sellimage.size();i:=i+1)
			if (pet.objtype==sellimage[i])
			   CreateItemInContainer(inv_fs, buyimage[i], 1);
			   break;
			endif
		endfor
		endif

	        // var buyamount := pet.strength*2;
		var buyamount := GetStrength(pet);

		say(pet.name + " is worth " + buyamount);
		SetObjProperty(pet, "guardkill", 1);
		pet.graphic := 1000;
		//Damage(pet, GetHp(pet));

		CreateItemInBackpack(who, UOBJ_GOLD_COIN, buyamount);
		return;

	   elseif ( (pet.graphic == CID_HUMAN_MALE) || (pet.graphic == CID_HUMAN_FEMALE) )
		say("Do I look like an Inn Keeper?!");
	   else
		say("You could sell " + pet.name + " but that is not your pet.");
           endif

endfunction


///////////////////
//  determines if the item is one that can be bought when using 'sell bag', 'sell all', or one of
//  other others
///////////////////


function IsBuyableItem (byref character, byref item, byref from_bag)
	if ( item.newbie )
		return 0;
	elseif (IsContainer (item) )
		return 0;
//	elseif (IsMagicalItem (item) )
//		say ("Ooh, " + item.desc);
//		return 0;
	elseif (GetObjProperty (item, "questitem") )
		Say ("Ooh, this looks important.");
		return 0;
	elseif (GetObjProperty (item, "ownerserial") )
		Say (item.desc + " is marked!");
		return 0;
	elseif (GetObjProperty (item, "slave") )
		Say (item.desc + " is marked!");
		return 0;
	elseif (item.buyprice and item.buyprice < 0)
		return 0;
	endif

	if (!from_bag)
		if (item.objtype == UOBJ_GOLD_COIN)
			return 0;
		endif

		return 1;
	endif

	var account := character.acct;
	if (!account)
		return;
	endif

	var sell_options := account.GetProp ("sell_options");
	if (!sell_options)
		sell_options := {0, 0, 0};
	endif

	case (item.objtype)
		UOBJ_GOLD_COIN:
			return 0;

		UOBJ_GEM_AMBER:
		UOBJ_GEM_STAR_SAPPHIRE:
		UOBJ_GEM_EMERALD:
		UOBJ_GEM_SAPPHIRE:
		UOBJ_GEM_RUBY:
		UOBJ_GEM_CITRINE:
		UOBJ_GEM_AMETHYST:
		UOBJ_GEM_TOURMALINE:
		UOBJ_GEM_DIAMOND:
			return sell_options[1];

		UOBJ_BLACK_PEARL:
		UOBJ_BLOOD_MOSS:
		UOBJ_GARLIC:
		UOBJ_GINSENG:
		UOBJ_MANDRAKE_ROOT:
		UOBJ_NIGHTSHADE:
		UOBJ_SULFUROUS_ASH:
		UOBJ_SPIDER_SILK:
			return sell_options[2];

		UOBJ_FEATHER:
		UOBJ_HIDE:
		UOBJ_RED_HIDE:
		UOBJ_BLUE_HIDE:
		UOBJ_BROWN_HIDE:
		UOBJ_GREEN_HIDE:
		UOBJ_SILVER_HIDE:
		UOBJ_LOG:
		0x0DF2:	//wand
		0x0DF3:	//wand
		0x0DF4:	//wand
		0x0DF5:	//wand
			return sell_options[3];
	endcase

	return 1;
endfunction



